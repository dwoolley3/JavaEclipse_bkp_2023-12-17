package topcoder;
import java.util.Arrays;  //Arrays.fill
//import java.util.*; 
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM593_Div2_L2_WolfDelaymaster
{
	public String check(String str)
	{
        String wolf = "wolf";
        String[] w = new String[13];
        Arrays.fill(w, "");
        for (int i = 1; i <= 12; i++)
            for (int j = 0; j < 4; j++)
                for (int k = 0; k < i; k++)
                    w[i] += wolf.charAt(j);

        boolean found = true;
        while (found)
        {
            found = false;
            for (int i = 1; i <= 12; i++)
            {
                if (str.startsWith(w[i]))
                {
                    str = str.substring(w[i].length());
                    found = true;
                }
            }
        }
        if (str.equals("")) return "VALID";
        return "INVALID";
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, boolean hasAnswer, String p1) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"");
		System.out.println("]");
		SRM593_Div2_L2_WolfDelaymaster obj;
		String answer;
		obj = new SRM593_Div2_L2_WolfDelaymaster();
		long startTime = System.currentTimeMillis();
		answer = obj.check(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p1 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p1);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		String p1;
		
		// ----- test 0 -----
		p0 = "wolf";
		p1 = "VALID";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "wwolfolf";
		p1 = "INVALID";
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "wolfwwoollffwwwooolllfffwwwwoooollllffff";
		p1 = "VALID";
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "flowolf";
		p1 = "INVALID";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
