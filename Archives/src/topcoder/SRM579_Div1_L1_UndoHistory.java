package topcoder;
import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM579_Div1_L1_UndoHistory
{
	public int minPresses(String[] lines)
	{
        int n = lines.length;
        int cnt = 0, min = 0;
        HashMap<String,Boolean> d = new HashMap<String,Boolean>();
        for (int i = 0; i < n; i++)
        {
            int j = 0;
            if (i > 0)
            {
                for (j = lines[i].length(); j > 0; j--)
                    if (d.containsKey(lines[i].substring(0, j)))
                        break;

                min = (lines[i].length() - j) + 2;
                if (lines[i].startsWith(lines[i - 1]))
                    min = Math.min(min, lines[i].length() - lines[i - 1].length());
            }
            else
                min = lines[i].length();
            min++;
            cnt += min;

            for (j = 0; j <= lines[i].length(); j++)
                d.put(lines[i].substring(0, j), true);
        }
        return cnt;

	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		SRM579_Div1_L1_UndoHistory obj;
		int answer;
		obj = new SRM579_Div1_L1_UndoHistory();
		long startTime = System.currentTimeMillis();
		answer = obj.minPresses(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		int p1;
		
		// ----- test 0 -----
		p0 = new String[]{"tomorrow","topcoder"};
		p1 = 18;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"a","b"};
		p1 = 6;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{"a","ab","abac","abacus"};
		p1 = 10;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{"pyramid","sphinx","sphere","python","serpent"};
		p1 = 39;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new String[]{"ba","a","a","b","ba"};
		p1 = 13;
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
