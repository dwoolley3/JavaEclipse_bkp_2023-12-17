package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM691_Div2_L3_Undiv2
{
	public long getsum(int n)
	{
		long[] a = new long[] {0L,42874332L,85748672L,128623005L,171497352L,214371696L,257246037L,300120373L,342994716L,385869068L,428743404L,471617737L,514492088L,557366437L,600240768L,643115107L,685989451L,728863800L,771738144L,814612469L,857486818L,900361164L,943235508L,986109833L,1028984179L,1071858520L,1114732859L,1157607195L,1200481544L,1243355889L,1286230228L,1329104561L,1371978909L,1414853259L,1457727597L,1500601932L,1543476286L,1586350625L,1629224963L,1672099299L,1714973650L,1757847987L,1800722333L,1843596670L,1886471013L,1929345364L,1972219697L,2015094022L,2057968370L,2100842716L,2143717050L,2186591391L,2229465735L,2272340078L,2315214421L,2358088752L,2400963101L,2443837447L,2486711789L,2529586120L,2572460472L,2615334820L,2658209156L,2701083496L,2743957840L,2786832185L,2829706528L,2872580857L,2915455204L,2958329552L,3001203885L,3044078210L,3086952568L,3129826910L,3172701246L,3215575576L,3258449929L,3301324271L,3344198611L,3387072945L,3429947290L,3472821645L,3515695981L,3558570316L,3601444667L,3644319017L,3687193349L,3730067686L,3772942037L,3815816380L,3858690718L,3901565044L,3944439396L,3987313741L,4030188075L,4073062404L,4115936757L,4158811103L,4201685438L,4244559778L,4287434122L};
		int tenM = 10_000_000;
		int inc = n / tenM;
		long sum =  a[inc];
		int start = tenM * inc + 1;
		//start = 1;
		for (int i = start; i <= n; i++)
		{
			int cnt = 0;		
			for (int j = 2; j < i+3; j++)
			{
				if (i % j != 0) cnt++;
				if (cnt == 2)
				{
					sum += j;	
					//if (i% 10_000_000 == 0)
						//System.out.print(sum + "L,");
					  //System.out.println(i + " " + j + " " + sum);
					break;
				}
			}
		}
		return sum;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, boolean hasAnswer, long p1) {
		System.out.print("Test " + testNum + ": [" + p0);
		System.out.println("]");
		SRM691_Div2_L3_Undiv2 obj;
		long answer;
		obj = new SRM691_Div2_L3_Undiv2();
		long startTime = System.currentTimeMillis();
		answer = obj.getsum(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		long p1;
		
		// ----- test 0 -----
		p0 = 99;
		p1 = 420L;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = 10_000_002;
		p1 = 42874340L;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = 1_000_000_000;
		p1 = 4287434122L;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = 990_000_000;
		p1 = 4244559778L;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = 999_999_999;
		p1 = 4287434116L;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = 1;
		p1 = 3L;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 2;
		p1 = 7L;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 3;
		p1 = 11L;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 5;
		p1 = 19L;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 8;
		p1 = 32L;
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = 13;
		p1 = 53L;
		all_right = KawigiEdit_RunTest(5, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
