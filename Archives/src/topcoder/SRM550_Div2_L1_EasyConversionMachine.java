package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM550_Div2_L1_EasyConversionMachine
{
	public String isItPossible(String originalWord, String finalWord, int k)
	{
        int n = originalWord.length(), cnt = 0;
        for (int i = 0; i < n; i++)
            if (originalWord.charAt(i) != finalWord.charAt(i)) cnt++;

        if (k >= cnt && (k - cnt) % 2 == 0)
            return "POSSIBLE";

        return "IMPOSSIBLE";	
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, String p1, int p2, boolean hasAnswer, String p3) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + "\"" + p1 + "\"" + "," + p2);
		System.out.println("]");
		SRM550_Div2_L1_EasyConversionMachine obj;
		String answer;
		obj = new SRM550_Div2_L1_EasyConversionMachine();
		long startTime = System.currentTimeMillis();
		answer = obj.isItPossible(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p3 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p3);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		String p1;
		int p2;
		String p3;
		
		// ----- test 0 -----
		p0 = "aababba";
		p1 = "bbbbbbb";
		p2 = 2;
		p3 = "IMPOSSIBLE";
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "aabb";
		p1 = "aabb";
		p2 = 1;
		p3 = "IMPOSSIBLE";
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "aaaaabaa";
		p1 = "bbbbbabb";
		p2 = 8;
		p3 = "POSSIBLE";
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "aaa";
		p1 = "bab";
		p2 = 4;
		p3 = "POSSIBLE";
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = "aababbabaa";
		p1 = "abbbbaabab";
		p2 = 9;
		p3 = "IMPOSSIBLE";
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
