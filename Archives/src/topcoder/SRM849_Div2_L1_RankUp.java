//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;
package topcoder;

public class SRM849_Div2_L1_RankUp
{
	public String level(String record)
	{
		int n = record.length();
		int stars = 0, wStreak = 0, lStreak = 0, div = 1, lev = 1; 
		for (int i = 0; i < n; i++) {
			char c = record.charAt(i);
			if (c == 'W') {
				lStreak = 0;
				wStreak++;
				stars += 2;
				if (stars > 5) stars = 5;
				if (stars == 5 && wStreak >= 3 && !(div == 4 && lev == 4)) {
					lev++;
					if (lev == 5) {
						lev = 1; div++;
						if (div > 4) {
							div = 4;
						} else {
							
						}
					}
					stars = 0;
					wStreak = 0;
				}				
				
			} else // c=="L"
			{
				wStreak = 0;
				lStreak++;
				stars--;
				if (stars < 0) stars = 0;
				if (stars == 0 && lStreak >= 3 && lev > 1) {
					lev--;
					stars = 5;
					lStreak = 0;
				}					
			}
			//System.out.println(div + " " + lev);
		}
		
		String[] divs = {"n/a","Bronze", "Silver", "Gold", "Platinum"};
		return divs[div] + " " + (5 - lev);
		
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, boolean hasAnswer, String p1) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"");
		System.out.println("]");
		SRM849_Div2_L1_RankUp obj;
		String answer;
		obj = new SRM849_Div2_L1_RankUp();
		long startTime = System.currentTimeMillis();
		answer = obj.level(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p1 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p1);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		String p1;
		
		// ----- test 0 -----
		p0 = "LLLLL";
		p1 = "Bronze 4";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "WWLWW";
		p1 = "Bronze 4";
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "WWLLWWW";
		p1 = "Bronze 3";
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "WWWLLL";
		p1 = "Bronze 4";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = "WWWWWWWWWWWWWLLL";
		p1 = "Silver 4";
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = "WWWWWLLL";
		p1 = "Bronze 3";
		all_right = KawigiEdit_RunTest(5, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 6 -----
		p0 = "WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW";
		p1 = "Platinum 1";
		all_right = KawigiEdit_RunTest(6, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 7 -----
		p0 = "WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWLLLLLLLWWLWWWWLW";
		p1 = "Platinum 3";
		all_right = KawigiEdit_RunTest(7, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 8 -----
		p0 = "WWWWWWLLLLLL";
		p1 = "Bronze 3";
		all_right = KawigiEdit_RunTest(8, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
