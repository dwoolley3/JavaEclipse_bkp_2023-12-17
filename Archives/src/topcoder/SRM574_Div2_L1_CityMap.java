package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM574_Div2_L1_CityMap
{
	public String getLegend(String[] c, int[] POIs)
	{
        int[] a = new int[256];
		for (int i = 0; i < c.length; i++)
            for (int j = 0; j < c[0].length(); j++)
                a[c[i].charAt(j)]++;

        String s = "";
        for (int i : POIs)
            for (char ch = 'A'; ch <= 'Z'; ch++)
                if (a[ch] == i)
                    s += ch;

        return s;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, int[] p1, boolean hasAnswer, String p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		SRM574_Div2_L1_CityMap obj;
		String answer;
		obj = new SRM574_Div2_L1_CityMap();
		long startTime = System.currentTimeMillis();
		answer = obj.getLegend(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p2 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p2);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		int[] p1;
		String p2;
		
		// ----- test 0 -----
		p0 = new String[]{"M....M","...R.M","R..R.R"};
		p1 = new int[]{3,4};
		p2 = "MR";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"XXXXXXXZXYYY"};
		p1 = new int[]{1,8,3};
		p2 = "ZXY";
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{"...........","...........","...........","..........T"};
		p1 = new int[]{1};
		p2 = "T";
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{"AIAAARRI.......GOAI.",".O..AIIGI.OAAAGI.A.I",".A.IAAAARI..AI.AAGR.","....IAI..AOIGA.GAIA.","I.AIIIAG...GAR.IIAGA","IA.AOA....I....I.GAA","IOIGRAAAO.AI.AA.RAAA","AI.AAA.AIR.AGRIAAG..","AAAAIAAAI...AAG.RGRA",".J.IA...G.A.AA.II.AA"};
		p1 = new int[]{16,7,1,35,11,66};
		p2 = "GOJIRA";
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
