package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM453_Div2_L2_TheBasketballDivTwo
{
	public int find(String[] table)
	{
        int n = table.length;
        int q = 0;

        for (int i = 0; i < n; i++)
            for (int j = 0; j < n; j++)
                if (table[i].charAt(j) == '?')
                    q++;

        int min = Integer.MAX_VALUE;
        int pow2 = (1 << q); //Math.Pow(2, q);
        for (int it = 0; it < pow2; it++)
        {
            int[] t = new int[n];
            int qn = -1;

            for (int i = 0; i < n; i++)
                for (int j = 0; j < n; j++)
                {
                    if (i == j) continue;
                    char ch = table[i].charAt(j);
                    if (table[i].charAt(j) == '?')
                    {
                        qn++;
                        //if (d[qn] == 0)                        
                        if ((it & (1 << qn)) == 0)
                            ch = 'L';
                        else
                            ch = 'W';
                    }
                    if (ch == 'W')
                        t[i]++;
                    else if (ch == 'L')
                        t[j]++;
                }

            int max = 0;
            for (int i = 0; i < n; i++)
                max = Math.max(max, t[i]);

            min = Math.min(max, min);
        }

        return min;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		SRM453_Div2_L2_TheBasketballDivTwo obj;
		int answer;
		obj = new SRM453_Div2_L2_TheBasketballDivTwo();
		long startTime = System.currentTimeMillis();
		answer = obj.find(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		int p1;
		
		// ----- test 0 -----
		p0 = new String[]{"X?","?X"};
		p1 = 1;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"XW","LX"};
		p1 = 2;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{"XWL","?XW","WLX"};
		p1 = 2;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{"XW?","LX?","??X"};
		p1 = 2;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
