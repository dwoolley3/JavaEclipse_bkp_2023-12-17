package topcoder;
import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM637_Div1_L1_GreaterGame
{
	public double calc(int[] hand, int[] sothe)
	{
		int n = hand.length;
		int[] a = new int[n*2+1];
		ArrayList<Integer> b = new ArrayList<Integer>();
		for (int x : hand) a[x] = 1;
		int neg = 0;
		for (int x : sothe)
			if (x == -1) neg++;
			else a[x] = 1;
		Arrays.sort(hand);

		int st = 1;
		for (int i = 0; i < neg; i++)
		{
			for (int j = st; j <= 2*n; j++)
				if (a[j] == 0) 
				{
					b.add(j);
					st = j+1;
					break;
				}
		}
		
		int cnt = 0;
		for (int i = 0; i < n; i++)
		{
			if (sothe[i] != -1)
			{
				boolean ok = false;
				for (int j = 0; j < n; j++)
					if (hand[j] > sothe[i])
					{
						cnt++;
						hand[j] = 0;
						ok = true;
						break;
					}
				if (!ok)
				{
					for (int j = 0; j < n; j++)
						if (hand[j] != 0)
						{
							hand[j] = 0;
							break;
						}
				}				
			}
		}
		ArrayList<Integer> c = new ArrayList<Integer>();
		for (int x : hand) if (x != 0) c.add(x);
		
		Collections.sort(b);
		Collections.sort(c);
		double ans = cnt;
		for (int i = 0; i < b.size(); i++)
		{
			int win = 0;
			for (int j = 0; j < c.size(); j++)
				if (c.get(i) > b.get(j)) win++;
			ans += win * 1.0 / c.size();
		}
		return ans;
		
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, boolean hasAnswer, double p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		SRM637_Div1_L1_GreaterGame obj;
		double answer;
		obj = new SRM637_Div1_L1_GreaterGame();
		long startTime = System.currentTimeMillis();
		answer = obj.calc(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = Math.abs(p2 - answer) <= 1e-9 * Math.max(1.0, Math.abs(p2));
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int[] p1;
		double p2;
		
		// ----- test 0 -----
		p0 = new int[]{4,2};
		p1 = new int[]{-1,-1};
		p2 = 1.5D;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{4,2};
		p1 = new int[]{1,3};
		p2 = 2.0D;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{2};
		p1 = new int[]{-1};
		p2 = 1.0D;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{1,3,5,7};
		p1 = new int[]{8,-1,4,-1};
		p2 = 2.5D;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new int[]{6,12,17,14,20,8,16,7,2,15};
		p1 = new int[]{-1,-1,4,-1,11,3,13,-1,-1,18};
		p2 = 8.0D;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
