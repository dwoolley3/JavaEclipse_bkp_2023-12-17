package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM677_Div2_L2_FourStrings
{
	public int shortestLength(String a, String b, String c, String d)
	{
		String[] s = {a, b, c, d};
		int min = Integer.MAX_VALUE, max = 0;
		//String minst = "";
		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
			{
				if (i == j) continue;
				for (int k = 0; k < 4; k++)
				{
					if (k == j || k == i) continue;
					for (int l = 0; l < 4; l++)
					{
						if (l == k || l == j || l == i) continue;
						String st = s[i];
						if (!st.contains(s[j]))
						{
							max = Math.min(st.length(), s[j].length());
							for (int m = max; m >= 0; m--)
								if (st.endsWith(s[j].substring(0,m)))
								{
									st += s[j].substring(m);
									break;
								}
						}
						if (!st.contains(s[k]))
						{
							max = Math.min(st.length(), s[k].length());
							for (int m = max; m >= 0; m--)
								if (st.endsWith(s[k].substring(0,m)))
								{
									st += s[k].substring(m);
									break;
								}
						}
						if (!st.contains(s[l]))
						{
							max = Math.min(st.length(), s[l].length());
							for (int m = max; m >= 0; m--)
								if (st.endsWith(s[l].substring(0,m)))
								{
									st += s[l].substring(m);
									break;
								}
						}
						if (st.length() < min)
						{
							min = st.length();
							//minst = st;
							//System.out.println(min + " " + minst);
						}						
					}
				}				
			}
		
		return min;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, String p1, String p2, String p3, boolean hasAnswer, int p4) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + "\"" + p1 + "\"" + "," + "\"" + p2 + "\"" + "," + "\"" + p3 + "\"");
		System.out.println("]");
		SRM677_Div2_L2_FourStrings obj;
		int answer;
		obj = new SRM677_Div2_L2_FourStrings();
		long startTime = System.currentTimeMillis();
		answer = obj.shortestLength(p0, p1, p2, p3);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p4);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p4;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		String p1;
		String p2;
		String p3;
		int p4;
		
		// ----- test 3 -----
		p0 = "ab";
		p1 = "cde";
		p2 = "bcdefg";
		p3 = "hij";
		p4 = 10;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "abcd";
		p1 = "fghijk";
		p2 = "defg";
		p3 = "ij";
		p4 = 11;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = "abc";
		p1 = "ab";
		p2 = "bc";
		p3 = "b";
		p4 = 3;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "a";
		p1 = "bc";
		p2 = "def";
		p3 = "ghij";
		p4 = 10;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "top";
		p1 = "coder";
		p2 = "opco";
		p3 = "pcode";
		p4 = 8;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "thereare";
		p1 = "arelots";
		p2 = "lotsof";
		p3 = "ofcases";
		p4 = 19;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = "aba";
		p1 = "b";
		p2 = "b";
		p3 = "b";
		p4 = 3;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = "x";
		p1 = "x";
		p2 = "x";
		p3 = "x";
		p4 = 1;
		all_right = KawigiEdit_RunTest(5, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
