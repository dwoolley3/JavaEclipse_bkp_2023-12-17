package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM678_Div1_L1_ANewHope
{
	public int count(int[] firstWeek, int[] lastWeek, int D)
	{
		int n = firstWeek.length;
		int ans = 0;
		for (int i = 0; i < n; i++)
			for (int j = 0; j < n; j++)
				if (firstWeek[i] == lastWeek[j])
				{
					int moves = (i-j) / (n-D);
					if ((i-j) % (n-D) != 0) moves++;
					ans = Math.max(ans, moves);
					//ans = Math.max(ans, (i - j + (n - D - 1)) / (n - D));
				}
	    
	    return ans + 1;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, int p2, boolean hasAnswer, int p3) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}" + "," + p2);
		System.out.println("]");
		SRM678_Div1_L1_ANewHope obj;
		int answer;
		obj = new SRM678_Div1_L1_ANewHope();
		long startTime = System.currentTimeMillis();
		answer = obj.count(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p3);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p3;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int[] p1;
		int p2;
		int p3;
				
		// ----- test 0 -----
		p0 = new int[]{50,40,7,31,46,14,26,24,49,35,42,29,39,48,36,38,47,44,27,4,20,13,8,5,37,17,51,34,6,43,12,10,45,9,21,22,18,2,32,23,41,15,33,30,11,16,3,25,28,19,1};
		p1 = new int[]{9,4,37,38,8,40,5,17,14,1,32,25,20,39,18,6,26,45,34,15,19,11,49,24,7,50,2,3,35,44,27,16,28,43,30,48,33,29,47,31,13,46,51,21,22,10,36,41,23,12,42};
		p2 = 49;
		p3 = 22;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		
		// ----- test 0 -----
		p0 = new int[]{33,30,21,46,41,1,49,22,25,28,4,44,47,24,7,13,5,29,9,31,38,32,26,35,11,19,27,34,6,23,39,40,36,10,20,15,18,43,17,2,37,48,16,3,42,8,14,45,12,50};
		p1 = new int[]{49,6,34,1,38,43,27,22,35,14,23,9,26,2,21,4,41,3,45,17,20,12,18,47,39,28,40,32,42,29,5,8,13,16,15,10,25,24,19,48,50,11,37,31,36,30,44,33,46,7};
		p2 = 48;
		p3 = 20;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = new int[]{1,5,7,11,46,20,17,42,13,4,25,34,21,39,49,37,32,33,8,28,27,43,45,10,15,23,30,3,48,24,19,47,9,31,50,36,12,41,38,26,6,16,29,35,40,2,14,22,44,18};
		p1 = new int[]{23,1,2,35,19,41,12,44,20,42,48,47,18,22,49,30,43,9,36,5,40,4,7,13,33,24,34,37,26,31,16,15,8,38,14,11,3,10,32,21,28,45,50,46,29,39,6,27,25,17};
		p2 = 48;
		p3 = 23;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		
		// ----- test 0 -----
		p0 = new int[]{1,2,3,4};
		p1 = new int[]{4,3,2,1};
		p2 = 3;
		p3 = 4;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{8,5,4,1,7,6,3,2};
		p1 = new int[]{2,4,6,8,1,3,5,7};
		p2 = 3;
		p3 = 3;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{1,2,3,4};
		p1 = new int[]{1,2,3,4};
		p2 = 2;
		p3 = 1;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
