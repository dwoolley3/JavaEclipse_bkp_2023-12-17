package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM568_Div2_L2_BallsSeparating
{
	public int minOperations(int[] red, int[] green, int[] blue)
	{
        int n = red.length;
        if (n < 3) return -1;
        int a1, a2, a3, min, sum = 0;
        int minAll = Integer.MAX_VALUE;

        for (int i = 0; i < n; i++)
            for (int j = 0; j < n; j++)
            {
                if (i == j) continue;
                for (int k = 0; k < n; k++)
                {
                    if (i == j || j == k || i == k) continue;
                    sum = 0;
                    for (int l = 0; l < n; l++)
                    {
                        if (l == i)
                            sum += (green[l] + blue[l]);
                        else if (l == j)
                            sum += (red[l] + blue[l]);
                        else if (l == k)
                            sum += (red[l] + green[l]);
                        else
                        {
                            a1 = red[l] + green[l];
                            a2 = red[l] + blue[l];
                            a3 = green[l] + blue[l];
                            min = Integer.MAX_VALUE;
                            min = Math.min(min, a1);
                            min = Math.min(min, a2);
                            min = Math.min(min, a3);
                            sum += min;
                        }
                    }
                    minAll = Math.min(minAll, sum);
                }
            }
        return minAll;		
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, int[] p2, boolean hasAnswer, int p3) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p2.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p2[i]);
		}
		System.out.print("}");
		System.out.println("]");
		SRM568_Div2_L2_BallsSeparating obj;
		int answer;
		obj = new SRM568_Div2_L2_BallsSeparating();
		long startTime = System.currentTimeMillis();
		answer = obj.minOperations(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p3);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p3;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int[] p1;
		int[] p2;
		int p3;
		
		// ----- test 0 -----
		p0 = new int[]{1,1,1};
		p1 = new int[]{1,1,1};
		p2 = new int[]{1,1,1};
		p3 = 6;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{5};
		p1 = new int[]{6};
		p2 = new int[]{8};
		p3 = -1;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{4,6,5,7};
		p1 = new int[]{7,4,6,3};
		p2 = new int[]{6,5,3,8};
		p3 = 37;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{7,12,9,9,7};
		p1 = new int[]{7,10,8,8,9};
		p2 = new int[]{8,9,5,6,13};
		p3 = 77;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new int[]{842398,491273,958925,849859,771363,67803,184892,391907,256150,75799};
		p1 = new int[]{268944,342402,894352,228640,903885,908656,414271,292588,852057,889141};
		p2 = new int[]{662939,340220,600081,390298,376707,372199,435097,40266,145590,505103};
		p3 = 7230607;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
