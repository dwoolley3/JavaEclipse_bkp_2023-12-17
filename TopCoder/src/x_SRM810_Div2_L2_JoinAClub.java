import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class x_SRM810_Div2_L2_JoinAClub
{
	public int[] maximumClub(int N, int[] X, int[] Y)
	{
		int nx = X.length;
		int[][] g = new int[N+1][N+1];
		for (int i = 0; i < nx; i++) {
			g[X[i]][Y[i]] = 1;
			g[Y[i]][X[i]] = 1;
		}
				
		int max = 0;
		ArrayList<Integer> bestGroup = new ArrayList<Integer>();
		for (int f = 0; f < N; f++) {
			ArrayList<Integer> group = new ArrayList<Integer>();
			boolean[] used = new boolean[nx];
			used[f] = true;
			group.add(f);
			Queue<Integer> que = new LinkedList<Integer>();
			que.add(f);
			while(!que.isEmpty())
			{
				int t = que.poll();  //Retrieve and remove from head
				used[t] = true;
				for (int j = 0; j <= N; j++)
					if(g[t][j] == 1 && !used[j]) {
						que.add(j);				
						group.add(j);
					}
			}
			
			if (group.size() > max) {
				max = group.size();
				bestGroup = group;				
			}	
		}
		int[] ans = new int[bestGroup.size()];
		for (int i = 0; i < bestGroup.size(); i++) {
			ans[i] = bestGroup.get(i);
		}
		return ans;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int[] p1, int[] p2, boolean hasAnswer, int[] p3) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p2.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p2[i]);
		}
		System.out.print("}");
		System.out.println("]");
		x_SRM810_Div2_L2_JoinAClub obj;
		int[] answer;
		obj = new x_SRM810_Div2_L2_JoinAClub();
		long startTime = System.currentTimeMillis();
		answer = obj.maximumClub(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p3.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print(p3[i]);
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(answer[i]);
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p3.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (answer[i] != p3[i]) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int[] p1;
		int[] p2;
		int[] p3;
		
		// ----- test 0 -----
		p0 = 5;
		p1 = new int[]{};
		p2 = new int[]{};
		p3 = new int[]{2};
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 4;
		p1 = new int[]{0,0,0,1,1,3};
		p2 = new int[]{1,2,3,3,2,2};
		p3 = new int[]{2,0,1,3};
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 6;
		p1 = new int[]{0,1,2,5};
		p2 = new int[]{3,3,3,3};
		p3 = new int[]{2,3,0,1,5};
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 47;
		p1 = new int[]{0,4,6,6,42};
		p2 = new int[]{13,7,7,23,15};
		p3 = new int[]{4,7,6,23};
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 47;
		p1 = new int[]{0,14,6,6,42};
		p2 = new int[]{13,7,7,23,15};
		p3 = new int[]{6,7,23,14};
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
