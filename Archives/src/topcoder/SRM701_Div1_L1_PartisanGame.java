package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM701_Div1_L1_PartisanGame
{
	int N = 1234567;
	int MAX = 5;
	
	public String getWinner(int n, int[] a, int[] b)
	{
//		String al = "Alice", bob = "Bob";
//		int na = a.length, nb = b.length;
//		
//		int aa = 0;
//		int bb = 0;
//		for(int v : a) aa |= 1<<v-1;
//		for(int v : b) bb |= 1<<v-1;
//		int z = 1000;
//		boolean[][] win = new boolean[2][z];
		int[][] f = new int[N][2];
		int[] was = new int[N];
		
		for (int i = 0; i < N; i++) {
			was[i] = -1;
		}
		f[0][0] = f[0][1] = 0;
		for (int i = 1; i <=n; i++) {
			f[i][0] = 0;
			for (int j = 0; j < a.length; j++) {
				if (i >= a[j] && f[i - a[j]][1] == 0) {
					f[i][0] |= 1;
				}
			}

			f[i][1] = 0;
			for (int j = 0; j < b.length; j++) {
				if (i >= b[j] && f[i - b[j]][0] == 0) {
					f[i][1] |= 1;
				}
			}
			
			if (i >= MAX) {
				int mask = 0;
				for (int j = i; j >= i-MAX; j--) {
					for (int k = 0; k < 2; k++) {
						mask = (mask <<1) + f[j][k];
					}
				}
				if (was[mask] == -1) {
					was[mask] = i;
				} else {
					int period = i - was[mask];
					n -= (n-i) / period * period;
				}
			}
		}
	
		return (f[n][0] == 1) ? "Alice" : "Bob";
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int[] p1, int[] p2, boolean hasAnswer, String p3) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p2.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p2[i]);
		}
		System.out.print("}");
		System.out.println("]");
		SRM701_Div1_L1_PartisanGame obj;
		String answer;
		obj = new SRM701_Div1_L1_PartisanGame();
		long startTime = System.currentTimeMillis();
		answer = obj.getWinner(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p3 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p3);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int[] p1;
		int[] p2;
		String p3;
		
		// ----- test 2 -----
		p0 = 999999987;
		p1 = new int[]{2,3,4};
		p2 = new int[]{2,5};
		p3 = "Alice";
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 999999971;
		p1 = new int[]{2,3,4};
		p2 = new int[]{2,5};
		p3 = "Alice";
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 999999971;
		p1 = new int[]{3,5};
		p2 = new int[]{2,4,5};
		p3 = "Bob";
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 999999971;
		p1 = new int[]{2,4,5};
		p2 = new int[]{3,5};
		p3 = "Alice";
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 999999971;
		p1 = new int[]{1,3,5};
		p2 = new int[]{2,4};
		p3 = "Alice";
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 999999971;
		p1 = new int[]{2,4};
		p2 = new int[]{1,3,5};
		p3 = "Bob";
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 999999971;
		p1 = new int[]{2,4,5};
		p2 = new int[]{1,3,5};
		p3 = "Bob";
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = 7;
		p1 = new int[]{3,4};
		p2 = new int[]{4};
		p3 = "Alice";
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 10;
		p1 = new int[]{1};
		p2 = new int[]{4,3,2};
		p3 = "Bob";
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 104982;
		p1 = new int[]{2,3,4,5};
		p2 = new int[]{2,5};
		p3 = "Alice";
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 999999999;
		p1 = new int[]{4};
		p2 = new int[]{5};
		p3 = "Bob";
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 1000000000;
		p1 = new int[]{1,2,3,4,5};
		p2 = new int[]{1,2,3,4,5};
		p3 = "Alice";
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
