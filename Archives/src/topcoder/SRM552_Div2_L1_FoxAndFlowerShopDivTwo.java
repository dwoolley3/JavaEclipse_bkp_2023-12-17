package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM552_Div2_L1_FoxAndFlowerShopDivTwo
{
	public int theMaxFlowers(String[] flowers, int r, int c)
	{
        int rows = flowers.length;
        int cols = flowers[0].length();
        int max = 0;
        int cnt = 0;
        for (int i = 0; i < r; i++)
            for (int j = 0; j < cols; j++)
                if (flowers[i].charAt(j) == 'F') cnt++;
        max = Math.max(cnt, max);

        cnt = 0;
        for (int i = r+1; i < rows; i++)
            for (int j = 0; j < cols; j++)
                if (flowers[i].charAt(j) == 'F') cnt++;
        max = Math.max(cnt, max);

        cnt = 0;
        for (int i = 0; i < rows; i++)
            for (int j = 0 ; j < c; j++)
                if (flowers[i].charAt(j) == 'F') cnt++;
        max = Math.max(cnt, max);

        cnt = 0;
        for (int i = 0; i < rows; i++)
            for (int j = c+1; j < cols; j++)
                if (flowers[i].charAt(j) == 'F') cnt++;
        max = Math.max(cnt, max);

        return max;

	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, int p1, int p2, boolean hasAnswer, int p3) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}" + "," + p1 + "," + p2);
		System.out.println("]");
		SRM552_Div2_L1_FoxAndFlowerShopDivTwo obj;
		int answer;
		obj = new SRM552_Div2_L1_FoxAndFlowerShopDivTwo();
		long startTime = System.currentTimeMillis();
		answer = obj.theMaxFlowers(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p3);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p3;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		int p1;
		int p2;
		int p3;
		
		// ----- test 0 -----
		p0 = new String[]{"F.F",".F.",".F."};
		p1 = 1;
		p2 = 1;
		p3 = 2;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"F..","...","..."};
		p1 = 0;
		p2 = 0;
		p3 = 0;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{".FF.F.F","FF...F.","..FF.FF"};
		p1 = 1;
		p2 = 2;
		p3 = 6;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{"F",".","F","F","F",".","F","F"};
		p1 = 4;
		p2 = 0;
		p3 = 3;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new String[]{".FFF..F...","FFF...FF.F","..F.F.F.FF","FF..F.FFF.","..FFFFF...","F....FF...",".FF.FF..FF","..F.F.FFF.",".FF..F.F.F","F.FFF.FF.F"};
		p1 = 4;
		p2 = 3;
		p3 = 32;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
