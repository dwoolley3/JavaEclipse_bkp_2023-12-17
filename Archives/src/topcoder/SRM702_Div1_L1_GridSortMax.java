package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM702_Div1_L1_GridSortMax
{
	public String findMax(int n, int m, int[] grid)
	{
		boolean[] fixedRow = new boolean[n];
		boolean[] fixedCol = new boolean[m];
		for (int i = 1; i <= n*m; i++)
		{
			int row = (i-1) / m;
			int col = (i-1) - row * m;
			for (int r = 0; r < n; r++)
				for (int c = 0; c < m; c++)
					if (grid[r*m+c] == i) 
					{
						if (row != r && (fixedRow[row] || fixedRow[r])) continue;
						if (col != c && (fixedCol[col] || fixedCol[c])) continue;
						
						//swap r and row for each col						
						for (int j = 0; j < m; j++)
						{
							int t = grid[r*m+j]; 
							grid[r*m+j] = grid[row*m+j];
							grid[row*m+j] = t;
						}
						fixedRow[row] = true;
						
						//swap c and col for each row
						for (int j = 0; j < n; j++)
						{
							int t = grid[j*m+c]; 
							grid[j*m+c] = grid[j*m+col];
							grid[j*m+col] = t;							
						}
						fixedCol[col] = true;
					}											
		}
		
		String s = "";
		for (int i = 1; i <= n*m; i++)
			s += (grid[i-1] == i) ? "1" : "0";
		
		return s;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, int[] p2, boolean hasAnswer, String p3) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + "{");
		for (int i = 0; p2.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p2[i]);
		}
		System.out.print("}");
		System.out.println("]");
		SRM702_Div1_L1_GridSortMax obj;
		String answer;
		obj = new SRM702_Div1_L1_GridSortMax();
		long startTime = System.currentTimeMillis();
		answer = obj.findMax(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p3 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p3);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		int[] p2;
		String p3;
		
		// ----- test 0 -----
		p0 = 2;
		p1 = 2;
		p2 = new int[]{1,2,3,4};
		p3 = "1111";
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 2;
		p1 = 2;
		p2 = new int[]{2,1,3,4};
		p3 = "1100";
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 2;
		p1 = 2;
		p2 = new int[]{4,2,3,1};
		p3 = "1001";
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 1;
		p1 = 10;
		p2 = new int[]{10,6,2,3,5,7,1,9,4,8};
		p3 = "1111111111";
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 3;
		p1 = 5;
		p2 = new int[]{5,2,10,7,9,3,4,14,11,1,15,12,6,8,13};
		p3 = "101100100100000";
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = 6;
		p1 = 2;
		p2 = new int[]{3,9,5,1,10,6,2,7,8,11,12,4};
		p3 = "100000101010";
		all_right = KawigiEdit_RunTest(5, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
