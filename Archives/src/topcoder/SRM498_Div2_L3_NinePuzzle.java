package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM498_Div2_L3_NinePuzzle
{
	public int getMinimumCost(String init, String goal)
	{
        int r1, g1, b1, y1, r2, g2, b2, y2;
        r1 = 10 - init.replace("R", "").length();
        g1 = 10 - init.replace("G", "").length();
        b1 = 10 - init.replace("B", "").length();
        y1 = 10 - init.replace("Y", "").length();

        r2 = 10 - goal.replace("R", "").length();
        g2 = 10 - goal.replace("G", "").length();
        b2 = 10 - goal.replace("B", "").length();
        y2 = 10 - goal.replace("Y", "").length();

        int dif = Math.abs(r1 - r2) + Math.abs(g1 - g2) +
            Math.abs(b1 - b2) + Math.abs(y1 - y2);

        return dif / 2;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, String p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + "\"" + p1 + "\"");
		System.out.println("]");
		SRM498_Div2_L3_NinePuzzle obj;
		int answer;
		obj = new SRM498_Div2_L3_NinePuzzle();
		long startTime = System.currentTimeMillis();
		answer = obj.getMinimumCost(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		String p1;
		int p2;
		
		// ----- test 0 -----
		p0 = "BG*YRGRRYR";
		p1 = "BGGY*YRRRR";
		p2 = 0;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "GBBB*BGBBG";
		p1 = "RYYY*YRYYR";
		p2 = 9;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "RRBR*BRBBB";
		p1 = "BBRB*RBRRR";
		p2 = 1;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
