package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM712_Div1_L1_LR
{
	public String construct(long[] s, long[] t)
	{
		long sums = 0, sumt = 0;
		int n = s.length;
		for (int i = 0; i < n; i++)
		{
			sums += s[i];
			sumt += t[i];
		}
		
		String ans = "";
		boolean sol = true;
		if (sums > sumt || sums == 0 && sumt > 0) sol = false;
		if (sol)
		{
			if (sums <= sumt) 
			{
				long pow2 = 1;
				int iter = 0;
				while (sums * pow2 < sumt) {pow2 *= 2; iter++;}
				if (sums * pow2 != sumt) sol = false;
				if (sol)
				{
					for (int i = 0; i < iter; i++)
					{
						long temp = s[n-1];
						for (int j = 0; j < n; j++)
						{
							long temp2 = s[j];
							s[j] = temp + s[j];
							temp = temp2;
						}
					}
					
					for (int i = 0; i < n; i++)
						System.out.print(s[i] + " ");
					
					boolean ok = false;	
					for (int i = 0; i <= iter; i++)
					{
						ok = true;					
						for (int j = 0; j < n && ok; j++)
							if (s[(j + i)%n] != t[j]) ok = false;
						
						if (ok)
						{
							for (int j = 0; j < iter - i; j++)
								ans += "L";
							for (int j = iter - i; j < iter; j++)
								ans += "R";
							break;
						}
						//System.out.print(s[i] + " ");					
						//System.out.println();
					}
					if (!ok) sol = false;
				}
			}
		}

		if (!sol) return "No solution";		
		return ans;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, long[] p0, long[] p1, boolean hasAnswer, String p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		SRM712_Div1_L1_LR obj;
		String answer;
		obj = new SRM712_Div1_L1_LR();
		long startTime = System.currentTimeMillis();
		answer = obj.construct(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p2 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p2);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		long[] p0;
		long[] p1;
		String p2;
		
		// ----- test 0 -----
		p0 = new long[]{0L,1L,0L,0L,0L};
		p1 = new long[]{0L,1L,2L,1L,0L};
		p2 = "LL";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new long[]{0L,0L,0L,1L};
		p1 = new long[]{0L,1L,0L,0L};
		p2 = "No solution";
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new long[]{1L,2L,3L,4L,5L,6L,7L,8L,9L,10L};
		p1 = new long[]{12L,24L,56L,95L,12L,78L,0L,100L,54L,88L};
		p2 = "No solution";
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new long[]{1L,0L,0L};
		p1 = new long[]{11L,11L,10L};
		p2 = "RRRRR";
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new long[]{1L,1L};
		p1 = new long[]{562949953421312L,562949953421312L};
		p2 = "RLLLRRRLLRRRLRLRRLLLLRLLRRLRRRLRRLRRLLRRRLLRRRLLL";
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = new long[]{0L,0L,0L,0L,0L};
		p1 = new long[]{0L,0L,0L,1L,0L};
		p2 = "No solution";
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 6 -----
		p0 = new long[]{123L,456L};
		p1 = new long[]{123L,456L};
		p2 = "";
		all_right = KawigiEdit_RunTest(6, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
