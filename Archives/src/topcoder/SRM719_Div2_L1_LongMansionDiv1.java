package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM719_Div2_L1_LongMansionDiv1
{
	public long minimalTime(int[] t, int sX, int sY, int eX, int eY)
	{
		int n = t.length;
		if (sX == eX && sY == eY)
		{
			return t[sX];
		}
		
		long minSum = Long.MAX_VALUE;
		
		for (int x = 0; x < n; x++)
		{
			int minX = Math.min(sX, x);
			int maxX = Math.max(sX, x);
			long sum = 0;
			for (int i = minX; i <= maxX; i++) 
				sum += t[i];			
			
			int cols = Math.abs(sY - eY);
			if (cols > 0) cols--;
			sum += 1L * cols * t[x];			
			
			minX = Math.min(eX, x);
			maxX = Math.max(eX, x);
			for (int i = minX; i <= maxX; i++)
				sum += t[i];
			
			if (sY == eY)
				sum -= t[x]; //double counted
			
			minSum = Math.min(minSum, sum);
		}
		
		return minSum;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int p1, int p2, int p3, int p4, boolean hasAnswer, long p5) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + p1 + "," + p2 + "," + p3 + "," + p4);
		System.out.println("]");
		SRM719_Div2_L1_LongMansionDiv1 obj;
		long answer;
		obj = new SRM719_Div2_L1_LongMansionDiv1();
		long startTime = System.currentTimeMillis();
		answer = obj.minimalTime(p0, p1, p2, p3, p4);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p5);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p5;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int p1;
		int p2;
		int p3;
		int p4;
		long p5;
		
		// ----- test 0 -----
		p0 = new int[]{5,3,10};
		p1 = 2;
		p2 = 0;
		p3 = 2;
		p4 = 2;
		p5 = 29L;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{5,3,10};
		p1 = 0;
		p2 = 2;
		p3 = 0;
		p4 = 0;
		p5 = 15L;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{137,200,184,243,252,113,162};
		p1 = 0;
		p2 = 2;
		p3 = 4;
		p4 = 2;
		p5 = 1016L;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{995,996,1000,997,999,1000,997,996,1000,996,1000,997,999,996,1000,998,999,995,995,998,995,998,995,997,998,996,998,996,997,1000,998,997,995,1000,996,997,1000,997,997,999,998,995,999,999,1000,1000,998,997,995,999};
		p1 = 18;
		p2 = 433156521;
		p3 = 28;
		p4 = 138238863;
		p5 = 293443080673L;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new int[]{1};
		p1 = 0;
		p2 = 0;
		p3 = 0;
		p4 = 0;
		p5 = 1L;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{5,3,10};
		p1 = 0;
		p2 = 1;
		p3 = 2;
		p4 = 0;
		p5 = 21L;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{995,996,1000,997,999,1000,997,996,1000,996,1000,997,999,996,1000,998,999,995,995,998,995,998,995,997,998,996,998,996,997,1000,998,997,995,1000,996,997,1000,997,997,999,998,995,999,999,1000,1000,998,997,995,999};
		p1 = 28;
		p2 = 433156521;
		p3 = 18;
		p4 = 138238863;
		p5 = 293443080673L;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
