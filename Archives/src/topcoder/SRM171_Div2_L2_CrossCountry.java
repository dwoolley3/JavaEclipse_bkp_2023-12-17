package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM171_Div2_L2_CrossCountry
{
	public String scoreMeet(int numTeams, String finishOrder)
	{
        int n = finishOrder.length();
        int[] num = new int[numTeams];
        int[] score = new int[numTeams];
        int[] sixth = new int[numTeams];
        for (int i = 0; i < n; i++)
        {
            char c = finishOrder.charAt(i);
            int ind = c - 'A';
            num[ind]++;
            if (num[ind] <= 5)
                score[ind] += (i + 1);
            else if (num[ind] == 6)
                sixth[ind] += (i + 1);
        }

        String s = "";
        for (int i = 0; i < numTeams; i++)
        {
            double min = 9999;
            int mini = 9999;
            for (int j = 0; j < numTeams; j++)
            {
                if (num[j] < 5) continue;
                if (score[j] < min ||
                   (score[j] == min && 
                   (sixth[j] < sixth[mini] && sixth[j] != 0 || sixth[mini] == 0 && sixth[j] != 0)))
                {
                    min = score[j];
                    mini = j;
                }
            }
            if (min == 9999) break;
            s += (char)(mini + 'A');
            num[mini] = 0;
        }
        return s;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, String p1, boolean hasAnswer, String p2) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + "\"" + p1 + "\"");
		System.out.println("]");
		SRM171_Div2_L2_CrossCountry obj;
		String answer;
		obj = new SRM171_Div2_L2_CrossCountry();
		long startTime = System.currentTimeMillis();
		answer = obj.scoreMeet(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p2 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p2);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		String p1;
		String p2;
		
		// ----- test 0 -----
		p0 = 2;
		p1 = "AABBABBABBA";
		p2 = "AB";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 3;
		p1 = "CCCBBBBBAAACC";
		p2 = "BC";
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 4;
		p1 = "ABDCBADBDCCDBCDBCAAAC";
		p2 = "BDCA";
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 10;
		p1 = "BDHCEAJBIDBCCHGCBDJEBAAHEGAGGADHGIECJEHAEBDADJCDHG";
		p2 = "BCDAHEG";
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 3;
		p1 = "BABCAABABAB";
		p2 = "AB";
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
