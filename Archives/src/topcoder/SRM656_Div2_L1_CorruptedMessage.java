package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM656_Div2_L1_CorruptedMessage
{
	public String reconstructMessage(String s, int k)
	{
		int[] a = new int[26];
		for (char c : s.toCharArray())
			a[c-'a']++;
		
		int n = s.length();
		for (int i = 0; i < 26; i++)
			if (n - a[i] == k)
			{
				String st = "";
				for (int j = 0; j < n; j++)
					st += (char)('a'+i);
				return st;
			}

		return ""; 		
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, int p1, boolean hasAnswer, String p2) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + p1);
		System.out.println("]");
		SRM656_Div2_L1_CorruptedMessage obj;
		String answer;
		obj = new SRM656_Div2_L1_CorruptedMessage();
		long startTime = System.currentTimeMillis();
		answer = obj.reconstructMessage(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p2 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p2);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		int p1;
		String p2;
		
		// ----- test 0 -----
		p0 = "hello";
		p1 = 3;
		p2 = "lllll";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "abc";
		p1 = 3;
		p2 = "ddd";
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "wwwwwwwwwwwwwwwwww";
		p1 = 0;
		p2 = "wwwwwwwwwwwwwwwwww";
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "ababba";
		p1 = 3;
		p2 = "aaaaaa";
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = "zoztxtoxytyt";
		p1 = 10;
		p2 = "oooooooooooo";
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = "jlmnmiunaxzywed";
		p1 = 13;
		p2 = "mmmmmmmmmmmmmmm";
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
