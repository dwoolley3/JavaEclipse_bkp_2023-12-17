package topcoder;
import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class TCO2015_R2C_YetAnotherCardGame
{
	public int maxCards(int[] petr, int[] snuke)
	{
		Arrays.sort(petr);
		Arrays.sort(snuke);
		int n = petr.length;
		int cnt = n; //, top = 0;
		
		int[] p = new int[n];
		int[] s = new int[n];
		int snum = 0, pnum = 0;
		
		for (int i = 0; i < n; i++)
			if (i==0 || petr[i] != petr[i-1])			
				p[pnum++] = petr[i];
		
		for (int i = 0; i < n; i++)
			if (i==0 || snuke[i] != snuke[i-1])			
				s[snum++] = snuke[i];
				
		int cnt1 = pnum;
		for (int i = 0; i < pnum; i++)
		{
			for (int j = 0; j < snum; j++)
				if (s[j] > p[i] && (i== pnum-1 || s[j] < p[i+1]))
				{
					cnt1++;
					break;
				}
		}

		int cnt2 = snum;
		for (int i = 0; i < snum; i++)
		{
			for (int j = 0; j < pnum; j++)
				if (p[j] > s[i] && (i== snum-1 || p[j] < s[i+1]))
				{
					cnt2++;
					break;
				}
		}
		if (cnt2 == snum + pnum)
			cnt2--;
		
		cnt = Math.max(cnt1, cnt2);
		return cnt;
			
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		TCO2015_R2C_YetAnotherCardGame obj;
		int answer;
		obj = new TCO2015_R2C_YetAnotherCardGame();
		long startTime = System.currentTimeMillis();
		answer = obj.maxCards(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int[] p1;
		int p2;
		
		// ----- test 0 -----
		p0 = new int[]{1,4,6};
		p1 = new int[]{2,5,7};
		p2 = 6;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = new int[]{2,5};
		p1 = new int[]{3,1};
		p2 = 3;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{1,1,1,1,1};
		p1 = new int[]{1,1,1,1,1};
		p2 = 1;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{1,4,6,7,3};
		p1 = new int[]{1,7,1,5,7};
		p2 = 6;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{19,99,86,30,98,68,73,92,37,69,93,28,58,36,86,32,46,34,71,29};
		p1 = new int[]{28,29,22,75,78,75,39,41,5,14,100,28,51,42,9,25,12,59,98,83};
		p2 = 28;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
