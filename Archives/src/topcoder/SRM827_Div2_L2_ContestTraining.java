package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM827_Div2_L2_ContestTraining
{
	public long[] practice(long heavyDays, long lightDays, long heavyProblems, long lightProblems, long[] queries)
	{
		// Should have used BigIntegers, oh well. Missed a test case in contest, but revised here.
		int n = queries.length;
		long[] ans = new long[n];
		long probsH, probsL;
		double probsLdbl;
		long q;
		for (int i = 0; i < n; i++) {
			q = queries[i];
			if ((q-1) / heavyDays < heavyProblems) { 
				ans[i] = (long)((q-1) / heavyProblems + 1);
			} else {
				probsLdbl = (double)lightDays * lightProblems;
				probsH = heavyDays * heavyProblems;
				if (q <= probsLdbl + probsH) {
					q -= probsH;
					ans[i] = heavyDays + (long)( (q-1) / lightProblems + 1);
				} else {
					probsL = lightDays * lightProblems;
					long weeks = (q-1) / (probsH + probsL);
					q -= (weeks * (probsH + probsL));
					if (q <= probsH) {
						ans[i] = weeks * (heavyDays + lightDays) + ((q-1) / heavyProblems + 1);
					} else {
						q -= probsH;
						ans[i] = weeks * (heavyDays + lightDays) + heavyDays + ((q-1) / lightProblems + 1);
					}
				}
			} 
		
		}
		
		return ans;		
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, long p0, long p1, long p2, long p3, long[] p4, boolean hasAnswer, long[] p5) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2 + "," + p3 + "," + "{");
		for (int i = 0; p4.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p4[i]);
		}
		System.out.print("}");
		System.out.println("]");
		SRM827_Div2_L2_ContestTraining obj;
		long[] answer;
		obj = new SRM827_Div2_L2_ContestTraining();
		long startTime = System.currentTimeMillis();
		answer = obj.practice(p0, p1, p2, p3, p4);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p5.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print(p5[i]);
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(answer[i]);
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p5.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (answer[i] != p5[i]) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		long p0;
		long p1;
		long p2;
		long p3;
		long[] p4;
		long[] p5;
		
		// ----- test 0 -----
		p0 = 1L;
		p1 = 1L;
		p2 = 1000000L;
		p3 = 999999L;
		p4 = new long[]{1L,2L,3L,100L,1000000L,1000001L,2000000L,10000000L,1999999L,2000001L};
		p5 = new long[]{1L,1L,1L,1L,1L,2L,3L,11L,2L,3L};
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = 5L;
		p1 = 2L;
		p2 = 5L;
		p3 = 1L;
		p4 = new long[]{5L,21L,25L,26L,27L,28L,32L,43L,50L};
		p5 = new long[]{1L,5L,5L,6L,7L,8L,8L,11L,12L};
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = 1L;
		p1 = 999999999999999999L;
		p2 = 999999999999999992L;
		p3 = 1L;
		p4 = new long[]{999999999999999995L, 999999999999999999L,1000000000000000000L};
		p5 = new long[]{4L,8L,9L};
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = 123456789123456789L;
		p1 = 123456789123456789L;
		p2 = 2L;
		p3 = 1L;
		p4 = new long[]{987654321987654321L,123456789123456789L};
		p5 = new long[]{617283954617283954L,61728394561728395L};
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------

		
		// ----- test 1 -----
		p0 = 1L;
		p1 = 1234567890L;
		p2 = 10L;
		p3 = 1L;
		p4 = new long[]{7L,17L,18L,19L,20L,987654321L,987654322L,2345678901L,345678901234L};
		p5 = new long[]{1L,8L,9L,10L,11L,987654312L,987654313L,2345678883L,345678898714L};
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 1L;
		p1 = 1234567890L;
		p2 = 10L;
		p3 = 1L;
		p4 = new long[]{19L,345678901234L,987654322L,18L,17L,2345678901L,987654321L,20L,20L,20L,7L};
		p5 = new long[]{10L,345678898714L,987654313L,9L,8L,2345678883L,987654312L,11L,11L,11L,1L};
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = 1L;
		p1 = 1L;
		p2 = 1L;
		p3 = 1L;
		p4 = new long[]{8L,9L,10L,11L,12L};
		p5 = new long[]{8L,9L,10L,11L,12L};
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = 10L;
		p1 = 12345678901234567L;
		p2 = 12345678901234567L;
		p3 = 12345678901234567L;
		p4 = new long[]{9012345678901234567L,12345678901234568L,12345678901234566L,12345678901234567L,123456789012345670L,123456789012345671L,1234567890123456701L,1234567890123456699L,1234567890123456702L};
		p5 = new long[]{731L,2L,1L,1L,10L,11L,101L,100L,101L};
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------
		

		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
