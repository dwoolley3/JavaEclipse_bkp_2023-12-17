package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM815_Div2_L1_SunShroom
{
	public long produceSun(long[] plantingTime, long queryTime)
	{
		long ans = 0;
		for (long pt : plantingTime) {
			long q = queryTime - pt;
			if (q > 0) {
				long small = ((long)Math.min(q, 119)) / 24 * 15;
				long big = ((long)Math.max(q - 96, 0)) / 24 * 25;
				ans += small + big;
			}
		}
		return ans;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, long[] p0, long p1, boolean hasAnswer, long p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + p1);
		System.out.println("]");
		SRM815_Div2_L1_SunShroom obj;
		long answer;
		obj = new SRM815_Div2_L1_SunShroom();
		long startTime = System.currentTimeMillis();
		answer = obj.produceSun(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		long[] p0;
		long p1;
		long p2;
		
		// ----- test 0 -----
		p0 = new long[]{10L};
		p1 = 33L;
		p2 = 0L;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new long[]{10L};
		p1 = 34L;
		p2 = 15L;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new long[]{47L};
		p1 = 200L;
		p2 = 110L;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new long[]{47L,47L,47L,47L,47L,47L};
		p1 = 200L;
		p2 = 660L;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new long[]{10L,100L,20L,200L,30L,300L,40L,400L};
		p1 = 123456L;
		p2 = 1027230L;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new long[]{100L};
		p1 = 219;
		p2 = 60L;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new long[]{100L};
		p1 = 220L;
		p2 = 85L;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new long[]{10000000000L};
		p1 = 1000000000000L;
		p2 = 1031249999960L;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------

		
		// ----- test 4 -----
		p0 = new long[]{10000000000L,10000000000L,10000000000L,10000000000L,10000000000L,10000000000L,10000000000L,10000000000L};
		p1 = 1000000000000L;
		p2 = 8249999999680L;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new long[]{1000000000000L,10000000000L,10000000000L,10000000000L,10000000000L,10000000000L,10000000000L,10000000000L};
		p1 = 900000000000L;
		p2 = 6489583332995L;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		
		// ----- test 2 -----
		p0 = new long[]{1000000000000L};
		p1 = 10000000000L;
		p2 = 0L;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
