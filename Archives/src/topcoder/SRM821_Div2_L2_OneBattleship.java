package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM821_Div2_L2_OneBattleship
{
	public String[] hit(String[] grid)
	{
		int r = grid.length;
		int c = grid[0].length();
		char[][] ch = new char[r][c];
		for (int i = 0; i < r; i++) {
			ch[i] = grid[i].toCharArray(); 
		}
		int ast = 0, p = 0;
		for (int i = 0; i < r; i++) {
			int d = 0;
			for (int j = 0; j < c; j++) {
				if (ch[i][j] == '.') {
					p++;
					d++;
					if (d == 3) {
						ch[i][j] = '*';
						ast++;
						d = 0;
					}
				} else {
					d = 0;
				}
			}
		}
		for (int i = 0; i < c; i++) {
			int d = 0;
			for (int j = 0; j < r; j++) {
				if (ch[j][i] == '.') {
					p++;
					d++;
					if (d == 3) {
						ch[j][i] = '*';
						ast++;
						d = 0;
					}
				} else {
					d = 0;
				}
			}
		}
		System.out.println("ast = " + ast + " p = " + p);
		
		for (int i = 0; i < r; i++) {
			grid[i] = "";
			for (int j = 0; j < c; j++)
				grid[i] += ch[i][j];
		}
		return grid;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, String[] p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		SRM821_Div2_L2_OneBattleship obj;
		String[] answer;
		obj = new SRM821_Div2_L2_OneBattleship();
		long startTime = System.currentTimeMillis();
		answer = obj.hit(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p1.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print("\"" + p1[i] + "\"");
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + answer[i] + "\"");
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p1.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (!answer[i].equals(p1[i])) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		String[] p1;
		
		// ----- test 0 -----
		p0 = new String[]{"WW.WW","WW.WW",".....","WW.WW","WW.WW"};
		p1 = new String[]{"WW.WW","WW.WW","..*..","WW.WW","WW.WW"};
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{".W......."};
		p1 = new String[]{".W..*.*.."};
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{"W.W.W.W.",".W.W.W.W","W.W.W.W.",".W.W.W.W","W.W.W.W.","...W.W.W"};
		p1 = new String[]{"W.W.W.W.",".W.W.W.W","W.W.W.W.",".W.W.W.W","W*W.W.W.","***W.W.W"};
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{"...",".W.","..."};
		p1 = new String[]{"..*",".W.","*.."};
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		p0 = new String[]{".........",".........",".........",".........",".........",".........",".........",".........","........."};
		p1 = new String[]{"..*..*..*","..*..*..*","*********","..*..*..*","..*..*..*","*********","..*..*..*","..*..*..*","*********"};
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		p0 = new String[]{"W........",".........",".........",".........",".........",".........",".........",".........","........."};
		p1 = new String[]{"W..*..*..","..*..*..*",".**.**.**","*.**.**.*","..*..*..*",".**.**.**","*.**.**.*","..*..*..*",".**.**.**"};
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		p0 = new String[]{"..........","..........","..........","..........","..........","..........","..........","..........",".........."};
		p1 = new String[]{"..*..*..*.","..*..*..*.","**********","..*..*..*.","..*..*..*.","**********","..*..*..*.","..*..*..*.","**********"};
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"...","...","..."};
		p1 = new String[]{"..*","..*","***"};
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
