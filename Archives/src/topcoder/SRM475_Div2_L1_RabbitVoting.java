package topcoder;
import java.util.*; //HashMap
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM475_Div2_L1_RabbitVoting
{
	public String getWinner(String[] names, String[] votes)
	{
        HashMap<String, Integer> d = new HashMap<String, Integer>();
        int n = names.length, max = 0;
        for (int i = 0; i < n; i++)
            d.put(names[i], 0);

        for (int i = 0; i < n; i++)
            if (!names[i].equals(votes[i]))
            {            	
                d.put(votes[i], d.get(votes[i])+1);
                max = Math.max(max, d.get(votes[i]));
            }

        int cnt = 0;
        String winner = "";
        for (int i = 0; i < n; i++)
            if (d.get(names[i]) ==  max)
            {
                cnt++;
                winner = names[i];
            }

        if (cnt == 1) return winner;
        return "";    
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, String[] p1, boolean hasAnswer, String p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p1[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		SRM475_Div2_L1_RabbitVoting obj;
		String answer;
		obj = new SRM475_Div2_L1_RabbitVoting();
		long startTime = System.currentTimeMillis();
		answer = obj.getWinner(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p2 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p2);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		String[] p1;
		String p2;
		
		// ----- test 0 -----
		p0 = new String[]{"Alice","Bill","Carol","Dick"};
		p1 = new String[]{"Bill","Dick","Alice","Alice"};
		p2 = "Alice";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"Alice","Bill","Carol","Dick"};
		p1 = new String[]{"Carol","Carol","Bill","Bill"};
		p2 = "";
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{"Alice","Bill","Carol","Dick"};
		p1 = new String[]{"Alice","Alice","Bill","Bill"};
		p2 = "Bill";
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{"Alice","Bill"};
		p1 = new String[]{"Alice","Bill"};
		p2 = "";
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new String[]{"WhiteRabbit","whiterabbit","whiteRabbit","Whiterabbit"};
		p1 = new String[]{"whiteRabbit","whiteRabbit","whiteRabbit","WhiteRabbit"};
		p2 = "whiteRabbit";
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
