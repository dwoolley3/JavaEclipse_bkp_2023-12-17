//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class dp_SRM814_Div2_L2_StepHopJumpMedium
{
	int MOD = (int)(1e9 + 7);
	char[] c;
	int N;
	int[] memo;
	public int countWays(String level)
	{
		N = level.length()-1;
		c = level.toCharArray();
		memo = new int[N+1];
		for (int i = 0; i <= N; i++) {
			memo[i] = -1;
		}
		int ans = cw(N);
		if (ans < 0) return 0;
		return ans;
	}
	
	private int cw(int n) {
		if (n < 0) {
			return 0;
		} else if (n == 0) {
			return 1;
		} else {
			if (memo[n] > -1) {
				return memo[n];
			}
			memo[n] = 0;
			if (n-1 >= 0 && c[n-1] == '-')
				memo[n] = cw(n-1) % MOD;
			if (n-2 >= 0 && c[n-2] == '-')
				memo[n] = (memo[n] + cw(n-2)) % MOD;
			if (n-3 >= 0 && c[n-3] == '-')
				memo[n] = (memo[n] + cw(n-3)) % MOD;
			memo[n] %= MOD;
			return memo[n];		
		}
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"");
		System.out.println("]");
		dp_SRM814_Div2_L2_StepHopJumpMedium obj;
		int answer;
		obj = new dp_SRM814_Div2_L2_StepHopJumpMedium();
		long startTime = System.currentTimeMillis();
		answer = obj.countWays(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		int p1;
		
		// ----- test 0 -----
		p0 = "----";
		p1 = 4;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "-**-";
		p1 = 1;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "-*-****-*-";
		p1 = 0;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "------------------------------------";
		p1 = 132436845;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = "--";
		p1 = 1;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "-**---**-";
		p1 = 2;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = "---*-*--*---*----*------------------------------------------------------------------------------------------------------------------------------------------------------------------**--**---**----**---";
		p1 = 234580825;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "---*----------------------------------------------------------------------------------------------------------------------------------------*--------------------";
		p1 = 190898320;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
