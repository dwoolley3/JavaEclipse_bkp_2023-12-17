package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM818_Div2_L3_MedianSegments
{
	public long count(int N, int K, int[] Aprefix, int M)
	{
		long mod = (long)Math.pow(2,31);
		//System.out.println(mod);
		int L = Aprefix.length;
		int[] a = new int[N];
		for (int i = 0; i < L-1; i++) {
			a[i] = Aprefix[i];
		}
		long state = a[L-1];
		for (int i = L; i < N; i++) {
			state = (state * 1103515245 + 12345) % mod;
			a[i] = (int)(state % M);
		}
		int cnt = 0;
		
		
		return cnt;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, int[] p2, int p3, boolean hasAnswer, long p4) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + "{");
		for (int i = 0; p2.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p2[i]);
		}
		System.out.print("}" + "," + p3);
		System.out.println("]");
		SRM818_Div2_L3_MedianSegments obj;
		long answer;
		obj = new SRM818_Div2_L3_MedianSegments();
		long startTime = System.currentTimeMillis();
		answer = obj.count(p0, p1, p2, p3);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p4);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p4;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		int[] p2;
		int p3;
		long p4;
		
		// ----- test 0 -----
		p0 = 10;
		p1 = 3;
		p2 = new int[]{30,40,50,60,70,80,90,100,110,120};
		p3 = 12345;
		p4 = 4L;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 9;
		p1 = 4;
		p2 = new int[]{0,10,2,9,5,4,6,7,3};
		p3 = 47;
		p4 = 11L;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 13;
		p1 = 5;
		p2 = new int[]{47023};
		p3 = 12345678;
		p4 = 5L;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
