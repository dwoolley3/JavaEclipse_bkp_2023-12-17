package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM706_Div2_L2_SellingFruits
{
	public int maxDays(int x, int f, int d, int p)
	{
		int fr = d / x;
		int days = Math.min(fr, f);
		d -= days * x;
		f -= days;
		if (f > 0) return days;
		
		//days += d / (p+x);
		//return days;
		
		//Find the highest value for which check() is ok
		//f = 0
		int lo = 0, hi = d/(p+x), mid;
		while (lo < hi)
		{
			mid = lo + (hi - lo + 1) / 2;  //amount to purchase
			if (check(mid, d, p, x))
				lo = mid;
			else
				hi = mid - 1;
		}
		
		return days + lo;			
	}
	
	private boolean check(int purchase, int d, int p, int x)
	{
		d -= (p+x) * purchase;
		return d >= 0;		
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, int p2, int p3, boolean hasAnswer, int p4) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2 + "," + p3);
		System.out.println("]");
		SRM706_Div2_L2_SellingFruits obj;
		int answer;
		obj = new SRM706_Div2_L2_SellingFruits();
		long startTime = System.currentTimeMillis();
		answer = obj.maxDays(p0, p1, p2, p3);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p4);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p4;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		int p2;
		int p3;
		int p4;
		
		// ----- test 0 -----
		p0 = 3;
		p1 = 5;
		p2 = 100;
		p3 = 10;
		p4 = 11;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 2;
		p1 = 17;
		p2 = 20;
		p3 = 1;
		p4 = 10;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 1;
		p1 = 97;
		p2 = 98;
		p3 = 1;
		p4 = 97;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 16;
		p1 = 4;
		p2 = 8;
		p3 = 2;
		p4 = 0;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 17;
		p1 = 1;
		p2 = 2000000000;
		p3 = 4;
		p4 = 95238095;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = 1;
		p1 = 1996245611;
		p2 = 1999990159;
		p3 = 123;
		p4 = 1996275808;
		all_right = KawigiEdit_RunTest(5, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 6 -----
		p0 = 15000000;
		p1 = 100;
		p2 = 2000000000;
		p3 = 1;
		p4 = 133;
		all_right = KawigiEdit_RunTest(6, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 7 -----
		p0 = 1;
		p1 = 1000000000;
		p2 = 2000000000;
		p3 = 1000000000;
		p4 = 1000000000;
		all_right = KawigiEdit_RunTest(7, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
