package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM501_Div2_L2_FoxPlayingGame
{
	public double theMax(int nA, int nB, int paramA, int paramB)
	{
		double scoreA = paramA / 1000.0;
		double scoreB = paramB / 1000.0;
		
		double total = sumA(scoreA, nA);
		double t2 = total * multB(scoreB, nB);
		double t3 = total * multB(scoreB, nB-1);
		double t4 = total * multB(scoreB, Math.min(1, nB));
		return Math.max(Math.max(Math.max(total,  t2), t3), t4);			
	}
	
	double multB(double b, double times)
	{
		double prod = 1; 
		for (int i = 0; i < times; i++) prod *= b;
		return prod;
	}
	double sumA(double a, double times)
	{
		return a * times;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, int p2, int p3, boolean hasAnswer, double p4) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2 + "," + p3);
		System.out.println("]");
		SRM501_Div2_L2_FoxPlayingGame obj;
		double answer;
		obj = new SRM501_Div2_L2_FoxPlayingGame();
		long startTime = System.currentTimeMillis();
		answer = obj.theMax(p0, p1, p2, p3);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p4);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = Math.abs(p4 - answer) <= 1e-9 * Math.max(1.0, Math.abs(p4));
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		int p2;
		int p3;
		double p4;
		
		// ----- test 0 -----
		p0 = 5;
		p1 = 4;
		p2 = 3000;
		p3 = 2000;
		p4 = 240.0D;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 3;
		p1 = 3;
		p2 = 2000;
		p3 = 100;
		p4 = 6.0D;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 4;
		p1 = 3;
		p2 = -2000;
		p3 = 2000;
		p4 = -8.0D;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 5;
		p1 = 5;
		p2 = 2000;
		p3 = -2000;
		p4 = 160.0D;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 50;
		p1 = 50;
		p2 = 10000;
		p3 = 2000;
		p4 = 5.62949953421312E17D;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = 41;
		p1 = 34;
		p2 = 9876;
		p3 = -1234;
		p4 = 515323.9982341775D;
		all_right = KawigiEdit_RunTest(5, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
