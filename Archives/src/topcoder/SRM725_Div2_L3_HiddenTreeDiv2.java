package topcoder;
import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM725_Div2_L3_HiddenTreeDiv2
{
	public String isPossible(int[] a, int[] b)
	{
		int n = a.length;
		boolean[] used = new boolean[n];
		@SuppressWarnings("unchecked")
		ArrayList<Integer>[] al = new ArrayList[n];
		int[] sum = new int[n];
		int listnum = 0;
		boolean changed = true;
		int assigned = 0;
		for (int i = 0; i < n; i++)
			if (a[i] == b[i])
			{
				al[listnum] = new ArrayList<Integer>();
				al[listnum].add(a[i]);
				sum[listnum] += a[i];
				used[i] = true;
				listnum++;
				changed = true;
				assigned++;
			}
		
		while (assigned < n && changed) {
			changed = false;
			for (int i = 0; i < n; i++)
				if (!used[i])
				{
					for (int ln = 0; ln < listnum; ln++)
						if (sum[ln] + a[i] == b[i])
						{
							sum[ln] += a[i];
							used[i] = true;
							changed = true;
							assigned++;
						}
				}
		}				

		return changed ? "Possible" : "Impossible";
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, boolean hasAnswer, String p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		SRM725_Div2_L3_HiddenTreeDiv2 obj;
		String answer;
		obj = new SRM725_Div2_L3_HiddenTreeDiv2();
		long startTime = System.currentTimeMillis();
		answer = obj.isPossible(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p2 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p2);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int[] p1;
		String p2;
		
		// ----- test 0 -----
		p0 = new int[]{1,1,1,1,1,1,1,1,1,1,1,1,1};
		p1 = new int[]{1,1,1,1,1,1,1,1,1,1,1,1,1};
		p2 = "Possible";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{123};
		p1 = new int[]{321};
		p2 = "Impossible";
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{1,1,1};
		p1 = new int[]{3,1,2};
		p2 = "Possible";
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{4,1,4,2,1,3};
		p1 = new int[]{5,1,6,2,4,3};
		p2 = "Possible";
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new int[]{536870912,536870912,536870912,536870912,536870913,536870912,536870912,536870912,536870915};
		p1 = new int[]{536870912,536870912,536870912,536870912,536870913,536870912,536870912,536870912,536870916};
		p2 = "Impossible";
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
