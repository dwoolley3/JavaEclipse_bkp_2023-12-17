package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class TCO2013_R1A_L1_HouseBuilding
{
	public int getMinimum(String[] area)
	{
        int r = area.length;
        int c = area[0].length();
        int max = 0, min = 100;
        for (int i = 0; i < r; i++)
            for (int j = 0; j < c; j++)
            {
                int a = area[i].charAt(j) - '0';
                if (a < min) min = a;
                if (a > max) max = a;
            }

        int minCnt = Integer.MAX_VALUE, kmax = 0;
        for (int kmin = min; kmin <= max - 1; kmin++)
        {
            kmax = kmin + 1;
            int cnt = 0;
            for (int i = 0; i < r; i++)
                for (int j = 0; j < c; j++)
                {
                    int a = area[i].charAt(j) - '0';
                    if (a < kmin) cnt += (kmin - a);
                    if (a > kmax) cnt += (a - kmax);
                }
            if (cnt < minCnt) minCnt = cnt;
        }
        if (minCnt == Integer.MAX_VALUE) return 0;
        return minCnt;		
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		TCO2013_R1A_L1_HouseBuilding obj;
		int answer;
		obj = new TCO2013_R1A_L1_HouseBuilding();
		long startTime = System.currentTimeMillis();
		answer = obj.getMinimum(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		int p1;
		
		// ----- test 0 -----
		p0 = new String[]{"10","31"};
		p1 = 2;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"54454","61551"};
		p1 = 7;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{"989"};
		p1 = 0;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{"90"};
		p1 = 8;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new String[]{"5781252","2471255","0000291","1212489"};
		p1 = 53;
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
