package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM659_Div2_L2_PublicTransit
{
	public int minimumLongestDistance(int R, int C)
	{
		int max = R*C;
		int minCnt = Integer.MAX_VALUE;
		for (int i = 0; i < max; i++)
			for (int j = i; j < max; j++)
			{
				
				int tr1 = i / C;
				int tc1 = i % C;
				int tr2 = j / C;
				int tc2 = j % C;
				
				int maxCnt = 0;
				for (int k = 0; k < max; k++)
					for (int l = 0; l < max; l++)
					{
						int r1 = k / C;
						int c1 = k % C;
						int r2 = l / C;
						int c2 = l % C;
						
						int d1 = Math.abs(r1 - r2) + Math.abs(c1 - c2);
						int d2 = Math.abs(r1 - tr1) + Math.abs(c1 - tc1)
								+ Math.abs(tr2 - r2) + Math.abs(tc2 - c2);
						int d3 = Math.abs(r1 - tr2) + Math.abs(c1 - tc2)
								+ Math.abs(tr1 - r2) + Math.abs(tc1 - c2);
												
						int minOf3 = Math.min(Math.min(d1, d2), d3);
						maxCnt = Math.max(maxCnt, minOf3);
					}		
				minCnt = Math.min(minCnt, maxCnt);
			}
		return minCnt;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1);
		System.out.println("]");
		SRM659_Div2_L2_PublicTransit obj;
		int answer;
		obj = new SRM659_Div2_L2_PublicTransit();
		long startTime = System.currentTimeMillis();
		answer = obj.minimumLongestDistance(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 5) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		int p2;
		
		// ----- test 0 -----
		p0 = 7;
		p1 = 7;
		p2 = 9;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = 5;
		p1 = 5;
		p2 = 6;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = 1;
		p1 = 2;
		p2 = 0;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = 1;
		p1 = 1;
		p2 = 0;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = 10;
		p1 = 9;
		p2 = 12;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = 10;
		p1 = 10;
		p2 = 13;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = 4;
		p1 = 1;
		p2 = 1;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 2;
		p1 = 2;
		p2 = 1;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 5;
		p1 = 3;
		p2 = 4;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 8;
		p1 = 2;
		p2 = 4;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
