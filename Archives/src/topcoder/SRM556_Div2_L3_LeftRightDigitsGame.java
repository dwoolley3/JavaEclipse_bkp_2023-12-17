package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM556_Div2_L3_LeftRightDigitsGame
{
	//Does not completely work
	
	public String minNumber(String digits)
	{
        int n = digits.length();
        char[] d = digits.toCharArray();
        String s = d[0] + "";
        char max = s.charAt(0);
        for (int i = 1; i < n; i++)
        {
            if (d[i] <= max)
                if (d[i] == '0' && smallerOutThere(d, i, max))
                    s = d[i] + s;
                else if (d[i] == '0')
                    s = s + d[i];
                else
                {
                    s = d[i] + s;
                    max = d[i];
                }
            else
                s = s + d[i];                   
        }

        return s;
	}
	
    public boolean smallerOutThere(char[] d, int i, char max)
    {
        for (int j = i+1; j < d.length; j++)
            if ((d[j] <= max) && (d[j] > '0')) return true;
        return false;
    }
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, boolean hasAnswer, String p1) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"");
		System.out.println("]");
		SRM556_Div2_L3_LeftRightDigitsGame obj;
		String answer;
		obj = new SRM556_Div2_L3_LeftRightDigitsGame();
		long startTime = System.currentTimeMillis();
		answer = obj.minNumber(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p1 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p1);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		String p1;
		
		// ----- test 0 -----
		p0 = "565";
		p1 = "556";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "9876543210";
		p1 = "1234567890";
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "8016352";
		p1 = "1086352";
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 14 (in system test) -----
		p0 = "82358880314196476696612703282192340320351990759311";
		p1 = "10000028358883141964766966127328219234323519975931";
		all_right = KawigiEdit_RunTest(14, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
