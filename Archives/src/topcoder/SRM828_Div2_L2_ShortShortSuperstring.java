package topcoder;

import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM828_Div2_L2_ShortShortSuperstring
{
	public String[] constructAll(String A, String B, String C)
	{
		String[] s = new String[6];
		s[0] = combine(A,B,C);
		s[1] = combine(A,C,B);
		s[2] = combine(B,A,C);
		s[3] = combine(B,C,A);
		s[4] = combine(C,A,B);
		s[5] = combine(C,B,A);
		int minLength = 30, cnt = 0;
		for (int i = 0; i < 6; i++) {
			if (s[i].length() < minLength) {
				minLength = s[i].length();
			} 			
		}

		int j = 0;
		HashSet<String> hs = new HashSet<>();
		for (int i = 0; i < 6; i++) {
			if (s[i].length() == minLength && !hs.contains(s[i])) {
				cnt++;
				hs.add(s[i]);
			}
		}
		hs = new HashSet<>();
		String[] ans = new String[cnt];
		for (int i = 0; i < 6; i++) {
			if (s[i].length() == minLength && !hs.contains(s[i])) {
				ans[j++] = s[i];
				hs.add(s[i]);
			}
		}
		Arrays.sort(ans);
		return ans;
	}
	
	// Did not work for: 	
	//	p0 = "aaiia";
	//	p1 = "ai";
	//	p2 = "ii";
	//	p3 = new String[]{"aaiia"};
	// as it only looked for ai at end and not in the middle or beginning of p0.
	private String combine(String a, String b, String c) {
		
		String s = a;
		for (int i = b.length(); i >= 0; i--) {
			if (s.endsWith(b.substring(0,i))) {
				s += b.substring(i);
				break;
			}
		}
		for (int i = c.length(); i >= 0; i--) {
			if (s.endsWith(c.substring(0,i))) {
				s += c.substring(i);
				break;
			}
		}
		
		
		return s;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, String p1, String p2, boolean hasAnswer, String[] p3) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + "\"" + p1 + "\"" + "," + "\"" + p2 + "\"");
		System.out.println("]");
		SRM828_Div2_L2_ShortShortSuperstring obj;
		String[] answer;
		obj = new SRM828_Div2_L2_ShortShortSuperstring();
		long startTime = System.currentTimeMillis();
		answer = obj.constructAll(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p3.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print("\"" + p3[i] + "\"");
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + answer[i] + "\"");
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p3.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (!answer[i].equals(p3[i])) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		String p1;
		String p2;
		String[] p3;
		
		// ----- test 1 -----
		p0 = "aabb";
		p1 = "aaabb";
		p2 = "abb";
		p3 = new String[]{"aaabb"};
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = "ab";
		p1 = "ef";
		p2 = "cd";
		p3 = new String[]{"abcdef","abefcd","cdabef","cdefab","efabcd","efcdab"};
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "a";
		p1 = "aaa";
		p2 = "aa";
		p3 = new String[]{"aaa"};
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "aaa";
		p1 = "aaa";
		p2 = "aaa";
		p3 = new String[]{"aaa"};
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "aab";
		p1 = "aaaa";
		p2 = "caa";
		p3 = new String[]{"caaaab"};
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = "hello";
		p1 = "oxbow";
		p2 = "watch";
		p3 = new String[]{"helloxbowatch","oxbowatchello","watchelloxbow"};
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = "aaiia";
		p1 = "ai";
		p2 = "ii";
		p3 = new String[]{"aaiia"};
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
