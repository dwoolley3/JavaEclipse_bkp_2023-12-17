package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM713_Div1_L1_PowerEquation_correct_2
{
	static final long MOD = (long) (1e9+7);
	
	public int count(int n)
	{
		n = 1000000000;
		long ans = 0;
		for (int i = 2; i <= n; i++) {
			int x = 1;
			long y = i;
			while (y * i <= n) {
				y *= i;
				x++;
			}
			if (x==1) break;
			for (int a = 1 ; a <= x; a++)
			{
				for (int b = a+1; b <= x; b++)
					if (gcd(a,b) == 1) {
						ans = (ans + (n/b)) % MOD;
					}
			}		
		}
		ans = (ans*2)%MOD;
		ans=(ans+(long)n*n+(long)n*(n-1))%MOD;
		return (int)ans;
	}
	static long lcm(long a, long b) {
		return a/gcd(a,b)*b;
	}
	static long gcd(long a, long b) {
		return b == 0 ? a : gcd(b,a%b);
	}
	
//		n = 9;
//		long cnt = 0, tot = 0;
//		for (int a = 1; a <= n; a++)
//		{
//			for (int b = 1; b <= n; b++)
//				for (int c = 1; c <= n; c++)
//					for (int d = 1; d <= n; d++)
//						if ((long)Math.pow(a, b) == (long)Math.pow(c, d))
//						{
//							System.out.println(a+"^"+b+"="+c+"^"+d);
//							cnt++;	
//							tot++;
//						}
//			System.out.println("Subtotal=" + cnt);
//			cnt = 0;
//		}
//		
//		return (int)tot;
//	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + p0);
		System.out.println("]");
		SRM713_Div1_L1_PowerEquation_correct_2 obj;
		int answer;
		obj = new SRM713_Div1_L1_PowerEquation_correct_2();
		long startTime = System.currentTimeMillis();
		answer = obj.count(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		
		// ----- test 0 -----
		p0 = 2;
		p1 = 6;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 3;
		p1 = 15;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 100;
		p1 = 21620;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 22306;
		p1 = 68467;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 1;
		p1 = 1;
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
