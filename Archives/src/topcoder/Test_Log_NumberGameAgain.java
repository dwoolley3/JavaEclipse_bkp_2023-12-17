package topcoder;

import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class Test_Log_NumberGameAgain
{
	public long solve(int k, long[] table)
	{
		for (int b = 2; b < 1000; b++)
		{
			long[] pow = new long[64];
			pow[0] = 1;
			for (int i = 1; i < 64 && pow[i] < 1_000_000_000; i++)
				pow[i] = pow[i-1] * b; 
			
			//i=243,b=3; i=59049,b=9; i=1000,b=10; i=4913,b=17; all give < integer
			for (int i = 1; i <= 1_000_000; i++)
			{
				double x = (Math.log(i) / Math.log(b)) + 1e-13;
				int l = (int)x;   //Truncate or Floor
				int j = 1;
				for (j = 1; j < 64; j++)
					if (pow[j] > i) break;
				
				int log2 = j-1;
				//if (logNbaseB(i,b) != l)
				if (log2 != l)
					//System.out.println(i + " " + b + " = " + x);
					System.out.println(i + " " + x + " " + b + " " + l + " " + logNbaseB(i,b) + " " + log2 + " " +  (l == logNbaseB(i,b)));
			}
		}
		return 0;

	}
	
	private int logNbaseB(long n, long b)
	{
		//Return the "floor" of: log N base B;  B^ans >= N
		long prod = 1;
		int ans = 0;
		while (prod < n) {
			prod *= b;
			ans++;
		}
		return ans - 1;		
	}
	
	public void p(Object ...o) {System.out.println(Arrays.deepToString(o));}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, long[] p1, boolean hasAnswer, long p2) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		Test_Log_NumberGameAgain obj;
		long answer;
		obj = new Test_Log_NumberGameAgain();
		long startTime = System.currentTimeMillis();
		answer = obj.solve(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		long[] p1;
		long p2;
		
		// ----- test 0 -----
		p0 = 2;
		p1 = new long[]{3L};
		p2 = 1L;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
//		// ----- test 0 -----
//		p0 = 4;
//		p1 = new long[]{4L,5L,6L,7L,8L,2L};
//		p2 = 1L;
//		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
//		// ------------------
//		
//		// ----- test 0 -----
//		p0 = 4;
//		p1 = new long[]{4L,8L,12L,13L,7L};
//		p2 = 6L;
//		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
//		// ------------------
//		
//		
//		// ----- test 0 -----
//		p0 = 4;
//		p1 = new long[]{4L,8L,12L,13L,15L};
//		p2 = 8L;
//		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
//		// ------------------
//		
//		// ----- test 0 -----
//		p0 = 3;
//		p1 = new long[]{2L,4L,6L};
//		p2 = 2L;
//		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
//		// ------------------
//		
//		// ----- test 1 -----
//		p0 = 5;
//		p1 = new long[]{2L,3L};
//		p2 = 0L;
//		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
//		// ------------------
//		
//		// ----- test 2 -----
//		p0 = 5;
//		p1 = new long[]{};
//		p2 = 30L;
//		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
//		// ------------------
//		
//		// ----- test 3 -----
//		p0 = 40;
//		p1 = new long[]{2L,4L,8L,16L,32141531L,2324577L,1099511627775L,2222222222L,33333333333L,4444444444L,2135L};
//		p2 = 549755748288L;
//		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
//		// ------------------
//		
//		// ----- test 4 -----
//		p0 = 40;
//		p1 = new long[]{};
//		p2 = 1099511627774L;
//		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
