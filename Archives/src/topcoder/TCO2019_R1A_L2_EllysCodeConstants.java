package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class TCO2019_R1A_L2_EllysCodeConstants
{
	public String getLiteral(String candidate)
	{
		String c = candidate;
		c = c.replace('O', '0');
		c = c.replace('I', '1');
		c = c.replace('Z', '2');
		c = c.replace('S', '5');
		c = c.replace('T', '7');
		
		if (c.matches("^[0-9A-F]+(LLU|LU|ULL|UL|U|LL|L)?$"))
			return "0x" + c;
		return "";

//		int n = c.length();
//		String suf = "";
//		if (c.endsWith("LLU")) {
//			c = c.substring(0, n - 3);
//			suf = "LLU";
//		}
//		else if (c.endsWith("LU")) {
//			c = c.substring(0, n - 2);
//			suf = "LU";
//		}
//		else if (c.endsWith("ULL")) {
//			c = c.substring(0, n - 3); 
//			suf = "ULL";
//		}
//		else if (c.endsWith("UL")) {
//			c = c.substring(0, n - 2); 
//			suf = "UL";
//		}
//		else if (c.endsWith("U")) {
//			c = c.substring(0, n - 1);
//			suf = "U";
//		}
//		else if (c.endsWith("LL")) {
//			c = c.substring(0, n - 2);
//			suf = "LL";
//		}
//		else if (c.endsWith("L")) {
//			c = c.substring(0, n - 1);
//			suf = "L";
//		}
//		
//		n = c.length();
//		boolean ok = (n > 0);
//		for (int i = 0; i < n && ok; i++) {
//			char ch = c.charAt(i);
//			if ((ch >= '0' && ch <= '9') || (ch >= 'A' && ch <= 'F')) {
//				continue;
//			}
//			ok = false;
//		}
//		
//		String ans = "";
//		if (ok)
//			ans = "0x" + c + suf;
//		return ans;				
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, boolean hasAnswer, String p1) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"");
		System.out.println("]");
		TCO2019_R1A_L2_EllysCodeConstants obj;
		String answer;
		obj = new TCO2019_R1A_L2_EllysCodeConstants();
		long startTime = System.currentTimeMillis();
		answer = obj.getLiteral(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p1 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p1);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		String p1;
		
		// ----- test 0 -----
		p0 = "DEADBEEF";
		p1 = "0xDEADBEEF";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "BABACECA";
		p1 = "0xBABACECA";
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "TOPCODER";
		p1 = "";
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "FLU";
		p1 = "0xFLU";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = "FULL";
		p1 = "0xFULL";
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = "FALL";
		p1 = "0xFALL";
		all_right = KawigiEdit_RunTest(5, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 6 -----
		p0 = "TASTEFUL";
		p1 = "0x7A57EFUL";
		all_right = KawigiEdit_RunTest(6, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 7 -----
		p0 = "OFFICIAL";
		p1 = "0x0FF1C1AL";
		all_right = KawigiEdit_RunTest(7, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 8 -----
		p0 = "OOZE";
		p1 = "0x002E";
		all_right = KawigiEdit_RunTest(8, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 9 -----
		p0 = "ESPRIT";
		p1 = "";
		all_right = KawigiEdit_RunTest(9, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 10 -----
		p0 = "COOL";
		p1 = "0xC00L";
		all_right = KawigiEdit_RunTest(10, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 11 -----
		p0 = "DISEASE";
		p1 = "0xD15EA5E";
		all_right = KawigiEdit_RunTest(11, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 12 -----
		p0 = "SOLVED";
		p1 = "";
		all_right = KawigiEdit_RunTest(12, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "FLLU";
		p1 = "0xFLLU";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "LFULL";
		p1 = "";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "ULLFULL";
		p1 = "";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "FULLULL";
		p1 = "";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "FLLL";
		p1 = "";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
