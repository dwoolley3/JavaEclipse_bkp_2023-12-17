package topcoder;
import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class SRM774_Div1_L1_LandSplitter
{
	public long cheapest(int N, int A, int B)
	{
		if (N == B) return 0;
		int nums = N/A;
		
		int rem = N - nums * A;
		long[] s = new long[nums];
		for (int i = 0; i < nums; i++) {
			int min = Math.min(B - A, rem);
			s[i] = A + min;
			rem -= min;
		}
		if (rem > 0) return -1;
		int tax = 0;

		while (nums >= 2) {		
//			for (int i = 0; i < nums; i++) 
//				System.out.print(s[i] + " ");
//			System.out.println();
			
			int ind = 0, ind2 = 0;
			
			while (ind < nums) {
				if (ind + 3 <= nums) {
					long p = get3(s[ind], s[ind+1], s[ind+2]);
					tax += p;
					s[ind2++] = s[ind] + s[ind+1] + s[ind+2];
					ind += 3;
				} else if (ind + 2 <= nums) {
					long p = get2(s[ind], s[ind+1]);
					tax += p;
					s[ind2++] = s[ind] + s[ind+1];
					ind += 2;
				}			
				else {
					s[ind2++] = s[ind];
					ind++;
				};
			}
			nums = ind2;
		}
		return tax;
	}
	
	long get2(long x, long y) {
		return x*y;
	}
	
	long get3(long x, long y, long z) {
		return x*y + y*z + z*x;
	}
	
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, int p2, boolean hasAnswer, long p3) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2);
		System.out.println("]");
		SRM774_Div1_L1_LandSplitter obj;
		long answer;
		obj = new SRM774_Div1_L1_LandSplitter();
		long startTime = System.currentTimeMillis();
		answer = obj.cheapest(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p3);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p3;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		int p2;
		long p3;
		
		// ----- test 0 -----
		p0 = 12;
		p1 = 3;
		p2 = 3;
		p3 = 54L;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 10;
		p1 = 3;
		p2 = 4;
		p3 = 33L;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 47;
		p1 = 1;
		p2 = 47;
		p3 = 0L;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 70;
		p1 = 40;
		p2 = 50;
		p3 = -1L;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 47;
		p1 = 4;
		p2 = 7;
		p3 = 945L;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 100000000;
		p1 = 101;
		p2 = 997;
		p3 = 945L;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
