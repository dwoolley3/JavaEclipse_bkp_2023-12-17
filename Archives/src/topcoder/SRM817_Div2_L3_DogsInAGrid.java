package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM817_Div2_L3_DogsInAGrid
{
	public String[] construct(int N)
	{
		int full = N/116; // 40 (vert) + 38 (tl-br diag) + 38 (tr-bl diag)
		char[][] c = new char[40][40];
		for (int i = 0; i < 40; i++)
			for (int j = 0; j < 40; j++) {
				c[i][j] = 'O';				
			}
		
		System.out.println(full);
		if (full > 0) {
			for (int j = 0; j < 40; j++) {
				c[0][j] = 'D';
			}
		}		
		for (int i = 0; i < full; i++) {
			for (int j = 0; j < 40; j++) {
				//c[i*2][j] = 'O'; // already done
				if (i % 2 == 0)
					c[i*2+2][j] = 'G';
				else
					c[i*2+2][j] = 'D';
			}			
		}
		int left = N - full * 116;	
		int j = 0;
		while (left > 19 && j < 40) {
			if (full == 0) {
				c[0][j] = 'D';
			}
			if (full % 2 == 0)
				c[full*2+2][j] = 'G';
			else
				c[full*2+2][j] = 'D';
			left--;
			if (j >= 2) left -= 2;
			j++;
		}	
			
		
		if (left > 0) {
			c[39][0] = 'D';
		}
		for (int i = 0; i < left; i++) {
			if (i % 2 == 0)
				c[39][i*2+2] = 'G';
			else 
				c[39][i*2+2] = 'D';
		}
		
		String[] s = new String[40];
		for (int i = 0; i < 40; i++) {
			s[i] = "";
			for (j = 0; j < 40; j++) s[i] += c[i][j];
		}
		return s;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, boolean hasAnswer, String[] p1) {
		System.out.print("Test " + testNum + ": [" + p0);
		System.out.println("]");
		SRM817_Div2_L3_DogsInAGrid obj;
		String[] answer;
		obj = new SRM817_Div2_L3_DogsInAGrid();
		long startTime = System.currentTimeMillis();
		answer = obj.construct(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p1.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print("\"" + p1[i] + "\"");
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + answer[i] + "\"");
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p1.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (!answer[i].equals(p1[i])) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		String[] p1;
		
		// ----- test 0 -----
		p0 = 4;
		p1 = new String[]{"DGODD","OOGOG","GOGDD"};
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 2;
		p1 = new String[]{"OOOOO","OODOO","ODOGO","OOGOO","OOOOO"};
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 7;
		p1 = new String[]{"DOGDOGDOGDOGDOGODOG"};
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 232;
		p1 = new String[]{"DOGDOGDOGDOGDOGODOG"};
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 2204;
		p1 = new String[]{"DOGDOGDOGDOGDOGODOG"};
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 2222;
		p1 = new String[]{"DOGDOGDOGDOGDOGODOG"};
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 20;
		p1 = new String[]{"DOGDOGDOGDOGDOGODOG"};
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = 22;
		p1 = new String[]{"DOGDOGDOGDOGDOGODOG"};
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
