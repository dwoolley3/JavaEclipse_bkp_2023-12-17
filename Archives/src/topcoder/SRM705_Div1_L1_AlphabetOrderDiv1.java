package topcoder;
import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM705_Div1_L1_AlphabetOrderDiv1
{
	public String isOrdered(String[] words)
	{
		for (char c = 'a'; c <= 'z'; c++)
		{			
			HashSet<Character> before = new HashSet<>();
			HashSet<Character> after = new HashSet<>();			
			for (int i = 0; i < words.length; i++)
			{
				if (words[i].contains(c+""))
				{
					int firstPos = -1;
					for (int j = 0; j < words[i].length(); j++)
					{
						char wc = words[i].charAt(j);
						if (wc == c)
						{
							if (firstPos == -1)
								firstPos = j;
							else if (wc != words[i].charAt(j-1))
								return "Impossible";								
						}
						else if (firstPos == -1)
						{
							if (after.contains(wc))
								return "Impossible";
							before.add(wc);
						}
						else
						{
							if (before.contains(wc))
								return "Impossible"; 
							after.add(wc);
						}
					}
				}
			}
		}
		return "Possible";
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, String p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		SRM705_Div1_L1_AlphabetOrderDiv1 obj;
		String answer;
		obj = new SRM705_Div1_L1_AlphabetOrderDiv1();
		long startTime = System.currentTimeMillis();
		answer = obj.isOrdered(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p1 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p1);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		String p1;
		
		// ----- test 0 -----
		p0 = new String[]{"single","round","match"};
		p1 = "Possible";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"topcoder","topcoder"};
		p1 = "Impossible";
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{"algorithm","contest"};
		p1 = "Impossible";
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{"pink","floyd"};
		p1 = "Possible";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new String[]{"gimnasia","y","esgrima","la","plata"};
		p1 = "Impossible";
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = new String[]{"pool","cool","stool"};
		p1 = "Possible";
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = new String[]{"poeol","cool","stool"};
		p1 = "Impossible";
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = new String[]{"abcdefghijklmnopqrstuvwx","yzx","wyz"};
		p1 = "Possible";
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = new String[]{"abcdefghijklmnopqrstuvwx","yzx","wyz", "yzv"};
		p1 = "Impossible";
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
