package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM457_Div2_L2_TheSquareDivTwo
{
	public String[] solve(String[] board)
	{
        int n = board.length;
        int[] R = new int[n];
        for (int i = 0; i < n; i++)
            for (int j = 0; j < n; j++)
            	if (board[i].charAt(j) == 'C') R[i]++;

        char[][] c = new char[n][n];
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < n; j++)
                if (R[j] >= n-i)
                    c[i][j] = 'C';
                else
                	c[i][j] = '.';
        	board[i] = new String(c[i]);
        }
        return board;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, String[] p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		SRM457_Div2_L2_TheSquareDivTwo obj;
		String[] answer;
		obj = new SRM457_Div2_L2_TheSquareDivTwo();
		long startTime = System.currentTimeMillis();
		answer = obj.solve(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p1.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print("\"" + p1[i] + "\"");
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + answer[i] + "\"");
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p1.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (!answer[i].equals(p1[i])) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		String[] p1;
		
		// ----- test 0 -----
		p0 = new String[]{"..","C."};
		p1 = new String[]{"..",".C"};
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"CC",".C"};
		p1 = new String[]{"C.","CC"};
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{".C..","CC.C","..C.","CCCC"};
		p1 = new String[]{"...C",".C.C",".C.C","CCCC"};
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{"...CCC","...CCC","...CCC","CCC...","CCC...","CCC..."};
		p1 = new String[]{"......","......","......","CCCCCC","CCCCCC","CCCCCC"};
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new String[]{".....C","....CC","...CCC","..CCCC",".CCCCC","CCCCCC"};
		p1 = new String[]{".....C","....CC","...CCC","..CCCC",".CCCCC","CCCCCC"};
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = new String[]{"C.C..C.C..C..C.","CCC...C..CCC.C.","......CC...CCCC",".C..CC.C.C.C.C.","C....C.C......C",".....C..CCCCC.C","CCC.......CCCCC","..C.C..C.C...C.","CCC....CCC.CC..","CC.CCCC.CCCC...",".C..C.CC.C.CC.C","C.CCCC..CC..C.C",".CCCC.CCCCCC...","..C...C.CCC.CC.","CCCC..CCC.C...."};
		p1 = new String[]{"...............","...............","...............","...............","...............",".........C..C..",".........C.CC..",".C....C.CCCCC.C",".C.C.CC.CCCCCCC","CCCC.CC.CCCCCCC","CCCC.CCCCCCCCCC","CCCCCCCCCCCCCCC","CCCCCCCCCCCCCCC","CCCCCCCCCCCCCCC","CCCCCCCCCCCCCCC"};
		all_right = KawigiEdit_RunTest(5, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
