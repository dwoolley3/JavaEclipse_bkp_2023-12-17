package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM821_Div2_L1_AssignPoints
{
	public int[] assign(int N, int[] results)
	{
		int[] r = new int[N];
		for (int i = 0; i < N; i++) {
			r[i] = i;
		}
		for (int i = 0; i < N; i++) {
			for (int j = i+1; j < N; j++) {
				if (results[i] > results[j]) {
					int x = results[i]; results[i] = results[j]; results[j] = x;
					x = r[i]; r[i] = r[j]; r[j] = x;
				}
			}
		}		
		int[] ans = new int[N];
		
		int pt = N;
		int same = 0;
		for (int i = 0; i < N; i++) {
			if (results[i] == -1) {
				ans[i] = 0;
			} else {
				if (i > 0 && results[i] != results[i-1]) {
					pt-=same;
					same = 1;
				} else { 
					same++;
				}
				ans[r[i]] = pt;
			}
		}	
		
		return ans;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int[] p1, boolean hasAnswer, int[] p2) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		SRM821_Div2_L1_AssignPoints obj;
		int[] answer;
		obj = new SRM821_Div2_L1_AssignPoints();
		long startTime = System.currentTimeMillis();
		answer = obj.assign(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p2.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print(p2[i]);
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(answer[i]);
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p2.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (answer[i] != p2[i]) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int[] p1;
		int[] p2;
		
		// ----- test 0 -----
		p0 = 5;
		p1 = new int[]{12,20,47,15,32};
		p2 = new int[]{5,3,1,4,2};
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 4;
		p1 = new int[]{-1,-1,-1,-1};
		p2 = new int[]{0,0,0,0};
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 5;
		p1 = new int[]{-1,14,-1,-1,17};
		p2 = new int[]{0,5,0,0,4};
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 6;
		p1 = new int[]{14,14,17,14,17,17};
		p2 = new int[]{6,6,3,6,3,3};
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 5;
		p1 = new int[]{28,12,-1,9,12};
		p2 = new int[]{2,4,0,5,4};
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 1;
		p1 = new int[]{-1};
		p2 = new int[]{0};
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 1;
		p1 = new int[]{1};
		p2 = new int[]{1};
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 6;
		p1 = new int[]{-1,14,17,14,17,17};
		p2 = new int[]{0,6,4,6,4,4};
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
