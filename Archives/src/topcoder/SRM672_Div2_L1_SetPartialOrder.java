package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM672_Div2_L1_SetPartialOrder
{
	public String compareSets(int[] a, int[] b)
	{
		int[] aa = new int[101];
		int[] bb = new int[101];
		for (int x : a)
			aa[x] = 1;
		for (int x : b)
			bb[x] = 1;
		
		boolean isGreater = false, isLess = false;
		for (int i = 1; i <= 100; i++)
			if (aa[i] == 1 && bb[i] == 0)
				isGreater = true;
			else if (aa[i] == 0 && bb[i] == 1)
				isLess = true;
			
		if (isGreater && isLess)
			return "INCOMPARABLE";
		else if (isGreater)
			return "GREATER";
		else if (isLess)
			return "LESS";
		return "EQUAL";				
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, boolean hasAnswer, String p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		SRM672_Div2_L1_SetPartialOrder obj;
		String answer;
		obj = new SRM672_Div2_L1_SetPartialOrder();
		long startTime = System.currentTimeMillis();
		answer = obj.compareSets(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p2 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p2);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int[] p1;
		String p2;
		
		// ----- test 0 -----
		p0 = new int[]{1,2,3,5,8};
		p1 = new int[]{8,5,1,3,2};
		p2 = "EQUAL";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{2,3,5,7};
		p1 = new int[]{1,2,3,4,5,6,7,8,9,10};
		p2 = "LESS";
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{2,4,6,8,10,12,14,16};
		p1 = new int[]{2,4,8,16};
		p2 = "GREATER";
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{42,23,17};
		p1 = new int[]{15,23,31};
		p2 = "INCOMPARABLE";
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
