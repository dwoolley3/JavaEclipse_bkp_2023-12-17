package topcoder;
import java.util.*;
//import java.util.regex.*;
//import java.text.*;
import java.math.*;


public class SRM731_Div2_L2_DancingClass
{
	public String checkOdds(int n, int k)
	{
		BigInteger[][] nCr = generateBinomialCoefficientsBig(500);
		BigInteger tot = BigInteger.ZERO;
		
		for (int a = 0; a <= n; a++)
		{
			int b = n - a;
			if (a * b >= k) {
				//System.out.println(n + " " + a + " = " + nCr[n][a]);
				tot = tot.add(nCr[n][a]);
			}
		}
		
		BigInteger two = BigInteger.valueOf(2L);
		BigInteger half = two.pow(n-1);

		if (tot.equals(half)) return "Equal";
		return (tot.compareTo(half) < 0) ? "Low" : "High";
	}
	
    private BigInteger[][] generateBinomialCoefficientsBig(int n) {
    	BigInteger[][] nCr = new BigInteger[n + 1][n + 1];    	
        for (int i = 0; i <= n; i++) {
        	Arrays.fill(nCr[i], BigInteger.ZERO);        	
        	nCr[i][0] = BigInteger.ONE;
        	
            for (int j = 1; j <= i; j++) {
            	nCr[i][j] = nCr[i - 1][j - 1].add(nCr[i - 1][j]);
            }
        }
        return nCr;
    }
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, boolean hasAnswer, String p2) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1);
		System.out.println("]");
		SRM731_Div2_L2_DancingClass obj;
		String answer;
		obj = new SRM731_Div2_L2_DancingClass();
		long startTime = System.currentTimeMillis();
		answer = obj.checkOdds(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p2 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p2);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		String p2;
		
		// ----- test 0 -----
		p0 = 2;
		p1 = 1;
		p2 = "Equal";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 3;
		p1 = 2;
		p2 = "High";
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 4;
		p1 = 4;
		p2 = "Low";
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 500;
		p1 = 500;
		p2 = "High";
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 40;
		p1 = 397;
		p2 = "Low";
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = 1;
		p1 = 1;
		p2 = "Low";
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
