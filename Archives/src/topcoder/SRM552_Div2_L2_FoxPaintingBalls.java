package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM552_Div2_L2_FoxPaintingBalls
{
	public long theMax(long R, long G, long B, int N)
	{
        long balls = (long)N * (N + 1) / 2; ;
        long tri = (R + G + B) / balls;
        if (N > 1)
        {
            tri = Math.min(tri, R / (balls / 3));
            tri = Math.min(tri, G / (balls / 3));
            tri = Math.min(tri, B / (balls / 3));
        }
        return tri;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, long p0, long p1, long p2, int p3, boolean hasAnswer, long p4) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2 + "," + p3);
		System.out.println("]");
		SRM552_Div2_L2_FoxPaintingBalls obj;
		long answer;
		obj = new SRM552_Div2_L2_FoxPaintingBalls();
		long startTime = System.currentTimeMillis();
		answer = obj.theMax(p0, p1, p2, p3);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p4);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p4;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		long p0;
		long p1;
		long p2;
		int p3;
		long p4;
		
		// ----- test 0 -----
		p0 = 2L;
		p1 = 2L;
		p2 = 2L;
		p3 = 3;
		p4 = 1L;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 1L;
		p1 = 2L;
		p2 = 3L;
		p3 = 3;
		p4 = 0L;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 8L;
		p1 = 6L;
		p2 = 6L;
		p3 = 4;
		p4 = 2L;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 7L;
		p1 = 6L;
		p2 = 7L;
		p3 = 4;
		p4 = 2L;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 100L;
		p1 = 100L;
		p2 = 100L;
		p3 = 4;
		p4 = 30L;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = 19330428391852493L;
		p1 = 48815737582834113L;
		p2 = 11451481019198930L;
		p3 = 3456;
		p4 = 5750952686L;
		all_right = KawigiEdit_RunTest(5, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 6 -----
		p0 = 1L;
		p1 = 1L;
		p2 = 1L;
		p3 = 1;
		p4 = 3L;
		all_right = KawigiEdit_RunTest(6, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 7 -----
		p0 = 678784925379051339L;
		p1 = 10400178261775338L;
		p2 = 596597756820352946L;
		p3 = 219585852;
		p4 = 1L;
		all_right = KawigiEdit_RunTest(7, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
