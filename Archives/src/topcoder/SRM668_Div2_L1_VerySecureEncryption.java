package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM668_Div2_L1_VerySecureEncryption
{
	public String encrypt(String message, int[] key, int K)
	{
		char[] c = message.toCharArray();
		char[] d = message.toCharArray();
		int n = message.length();
		for (int i = 0; i < K; i++)
		{
			for (int j = 0; j < n; j++)
				d[key[j]] = c[j];
			for (int j = 0; j < n; j++)
				c[j] = d[j];
		}
		return new String(d);
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, int[] p1, int p2, boolean hasAnswer, String p3) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}" + "," + p2);
		System.out.println("]");
		SRM668_Div2_L1_VerySecureEncryption obj;
		String answer;
		obj = new SRM668_Div2_L1_VerySecureEncryption();
		long startTime = System.currentTimeMillis();
		answer = obj.encrypt(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p3 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p3);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		int[] p1;
		int p2;
		String p3;
		
		// ----- test 0 -----
		p0 = "abc";
		p1 = new int[]{1,2,0};
		p2 = 1;
		p3 = "cab";
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "abcde";
		p1 = new int[]{4,3,2,1,0};
		p2 = 1;
		p3 = "edcba";
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "abcde";
		p1 = new int[]{4,3,2,1,0};
		p2 = 2;
		p3 = "abcde";
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "uogcodlk";
		p1 = new int[]{4,3,6,2,5,1,0,7};
		p2 = 44;
		p3 = "goodluck";
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
