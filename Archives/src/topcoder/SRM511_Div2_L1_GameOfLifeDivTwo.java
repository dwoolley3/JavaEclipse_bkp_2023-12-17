package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM511_Div2_L1_GameOfLifeDivTwo
{
	public String theSimulation(String init, int T)
	{
	    int n = init.length();
        String ret = init;
        for (int t = 1; t <= T; t++)
        {
            init = ret;
            ret = "";
            int a, b;
            for (int i = 0; i < n; i++)
            {
                if (i == 0)
                    a = n - 1;
                else
                    a = i - 1;
                if (i == n - 1)
                    b = 0;
                else
                    b = i + 1;

                if (init.charAt(a)-'0' + init.charAt(b)-'0' + init.charAt(i)-'0' >= 2)
                    ret += "1";
                else
                    ret += "0";
            }
        }
            
        return ret;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, int p1, boolean hasAnswer, String p2) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + p1);
		System.out.println("]");
		SRM511_Div2_L1_GameOfLifeDivTwo obj;
		String answer;
		obj = new SRM511_Div2_L1_GameOfLifeDivTwo();
		long startTime = System.currentTimeMillis();
		answer = obj.theSimulation(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p2 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p2);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		int p1;
		String p2;
		
		// ----- test 0 -----
		p0 = "01010";
		p1 = 2;
		p2 = "00000";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "010101";
		p1 = 5;
		p2 = "101010";
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "111010";
		p1 = 58;
		p2 = "111111";
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "111111111";
		p1 = 511;
		p2 = "111111111";
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = "110010000010111110010100001001";
		p1 = 1000;
		p2 = "110000000001111110000000000001";
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = "00101110011";
		p1 = 0;
		p2 = "00101110011";
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
