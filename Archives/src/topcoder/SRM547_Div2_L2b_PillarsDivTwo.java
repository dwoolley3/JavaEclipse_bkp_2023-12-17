package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM547_Div2_L2b_PillarsDivTwo
{
	public double maximalLength(int[] height, int w)
	{
        int n = height.length;
        double[][] dp = new double[n][101];
        double max = 0;
        for (int i = 1; i < n; i++)
            for (int j = 1; j <= height[i - 1]; j++)
                for (int k = 1; k <= height[i]; k++)
                {
                    dp[i][k] = Math.max(dp[i][k],
                        dp[i - 1][j] + hypot(w, k - j));
                    max = Math.max(max, dp[i][k]);
                }

        return max;
	}

    private double hypot(double w, double h)
    {
        return Math.sqrt(w * w +  h * h);
    }
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int p1, boolean hasAnswer, double p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + p1);
		System.out.println("]");
		SRM547_Div2_L2b_PillarsDivTwo obj;
		double answer;
		obj = new SRM547_Div2_L2b_PillarsDivTwo();
		long startTime = System.currentTimeMillis();
		answer = obj.maximalLength(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = Math.abs(p2 - answer) <= 1e-9 * Math.max(1.0, Math.abs(p2));
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int p1;
		double p2;
		
		// ----- test 0 -----
		p0 = new int[]{3,3,3};
		p1 = 2;
		p2 = 5.656854249492381D;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{1,1,1,1};
		p1 = 100;
		p2 = 300.0D;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{100,2,100,2,100};
		p1 = 4;
		p2 = 396.32310051270036D;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{2,1,1,2};
		p1 = 1;
		p2 = 3.82842712474619D;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
