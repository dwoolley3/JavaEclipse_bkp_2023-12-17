package topcoder;
import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM464_Div2_L2_ColorfulStrings
{
	public String getKth(int n, int k)
	{
        if (n >= 9) return "";
        if (n > 1 && ((n+"").contains("1") 
            || (n+"").contains("1"))) return "";

        int first = 1;
        for (int i = 0; i < n-1; i++) first *= 10;
        int last = first * 10 - 1;
        if (first == 1) first = 0;

        for (int i = first; i <= last; i++)
        {
            if (isColorful(i))
            {
                k--;
                if (k == 0) return i + "";
            } 
        }
        return "";
	}

    private boolean isColorful(int num)
    {
        String s = String.valueOf(num);
        if (num >= 10 && (s.contains("1") || s.contains("1"))) return false;

        HashSet<Integer> d = new HashSet<Integer>();
        int n = s.length();
        for (int len = 1; len <= n; len++)
            for (int j = 0; j <= n - len; j++)
            {
                int p = 1;
                for (int k = 0; k < len; k++)
                    p *= (s.charAt(j+k) - '0');
            if (d.contains(p)) return false;
            d.add(p);
        }
        return true;
    }

	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, boolean hasAnswer, String p2) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1);
		System.out.println("]");
		SRM464_Div2_L2_ColorfulStrings obj;
		String answer;
		obj = new SRM464_Div2_L2_ColorfulStrings();
		long startTime = System.currentTimeMillis();
		answer = obj.getKth(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p2 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p2);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		String p2;
		
		// ----- test 0 -----
		p0 = 3;
		p1 = 4;
		p2 = "238";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 4;
		p1 = 2000;
		p2 = "";
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 5;
		p1 = 1;
		p2 = "23457";
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 2;
		p1 = 22;
		p2 = "52";
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 6;
		p1 = 464;
		p2 = "257936";
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
