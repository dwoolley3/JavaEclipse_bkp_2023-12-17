package topcoder;
import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM732_Div2_L1_DeckOfCards
{
	public String IsValid(int n, int[] value, String suit)
	{
		String per = "Perfect", imper = "Not perfect";
		HashSet<String> hs = new HashSet<>();
		boolean ok = true;
		for (int i = 0; i < n; i++)
		{
			String s = (value[i]+"") + suit.charAt(i);
			if (hs.contains(s)) ok = false;
			hs.add(s);
		}
		
		if (!ok) return imper;
		
		for (int i = 0; i < n; i++)
			for (int j = 0; j < n; j++) {
				String s = (value[i]+"") + suit.charAt(j);
				if (!hs.contains(s)) ok = false;
			}
		
		return ok ? per : imper;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int[] p1, String p2, boolean hasAnswer, String p3) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}" + "," + "\"" + p2 + "\"");
		System.out.println("]");
		SRM732_Div2_L1_DeckOfCards obj;
		String answer;
		obj = new SRM732_Div2_L1_DeckOfCards();
		long startTime = System.currentTimeMillis();
		answer = obj.IsValid(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p3 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p3);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int[] p1;
		String p2;
		String p3;
		
		// ----- test 0 -----
		p0 = 1;
		p1 = new int[]{10};
		p2 = "z";
		p3 = "Perfect";
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 3;
		p1 = new int[]{1,2,3};
		p2 = "hhh";
		p3 = "Perfect";
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 4;
		p1 = new int[]{2,3,2,3};
		p2 = "hcch";
		p3 = "Perfect";
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 3;
		p1 = new int[]{1,1,1};
		p2 = "hch";
		p3 = "Not perfect";
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 4;
		p1 = new int[]{1,2,3,4};
		p2 = "hhcc";
		p3 = "Not perfect";
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
