package topcoder;
import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM732_Div2_L2_CubeStackingGame
{
	public int MaximumValue(int n, int[] c1, int[] c2, int[] c3, int[] c4)
	{
		int max = 1;
		int num = (int)Math.pow(4, n-1);
		for (int i = 0; i <= num; i++) {
			int x = i;
			int[][] c = new int[n][4];
			for (int j = 0; j < n; j++)
				for (int k = 0; k < 4; k++)
					if (k == 0)
						c[j][k] = c1[j];
					else if (k == 1)
						c[j][k] = c2[j];
					else if (k == 2)
						c[j][k] = c3[j];
					else if (k == 3)
						c[j][k] = c4[j];
			
			int[] a = new int[n];
			for (int j = 1; j < n; j++) {
				int r = x % 4;
				a[j] = r;
//				for (int k = 0; k <= r; k++) {
//					int t = c[j][(r+k)%4];
//					c[j][(r+k)%4] = c[j][(r+k+1)%4];
//					c[j][(r+k+1)%4] = c[j][(r+k+2)%4];
//					c[j][(r+k+2)%4] = c[j][(r+k+3)%4];
//					c[j][(r+k+3)%4] = t;
//				}				
				x /= 4;
			}
			for (int j = 1; j < n; j++) {
				boolean ok = true;
				for (int r = 0; r < 4; r++) {
					HashSet<Integer> hs = new HashSet<>();					
					for (int k = 0; k <= j; k++)
						if (hs.contains(c[k][(r+a[k])%4]))
							ok = false;
						else hs.add(c[k][(r+a[k])%4]);					
				}
				if (ok) max = Math.max(max, j+1);
			}			
		}

		return max;

	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int[] p1, int[] p2, int[] p3, int[] p4, boolean hasAnswer, int p5) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p2.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p2[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p3.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p3[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p4.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p4[i]);
		}
		System.out.print("}");
		System.out.println("]");
		SRM732_Div2_L2_CubeStackingGame obj;
		int answer;
		obj = new SRM732_Div2_L2_CubeStackingGame();
		long startTime = System.currentTimeMillis();
		answer = obj.MaximumValue(p0, p1, p2, p3, p4);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p5);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p5;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int[] p1;
		int[] p2;
		int[] p3;
		int[] p4;
		int p5;
		
		// ----- test 0 -----
		p0 = 2;
		p1 = new int[]{1,1};
		p2 = new int[]{2,1};
		p3 = new int[]{1,2};
		p4 = new int[]{2,2};
		p5 = 1;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 2;
		p1 = new int[]{1,2};
		p2 = new int[]{1,2};
		p3 = new int[]{1,2};
		p4 = new int[]{1,2};
		p5 = 2;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 2;
		p1 = new int[]{1,1};
		p2 = new int[]{1,2};
		p3 = new int[]{1,2};
		p4 = new int[]{1,2};
		p5 = 1;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 2;
		p1 = new int[]{1,1};
		p2 = new int[]{2,2};
		p3 = new int[]{1,1};
		p4 = new int[]{2,2};
		p5 = 2;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 2;
		p1 = new int[]{1,1};
		p2 = new int[]{1,2};
		p3 = new int[]{2,2};
		p4 = new int[]{2,1};
		p5 = 2;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = 4;
		p1 = new int[]{1,1,3,4};
		p2 = new int[]{1,2,3,4};
		p3 = new int[]{1,3,3,4};
		p4 = new int[]{1,4,3,4};
		p5 = 1;
		all_right = KawigiEdit_RunTest(5, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------
		
		// ----- test 6 -----
		p0 = 4;
		p1 = new int[]{1,1,1,1};
		p2 = new int[]{2,2,2,4};
		p3 = new int[]{3,3,3,3};
		p4 = new int[]{4,4,4,2};
		p5 = 4;
		all_right = KawigiEdit_RunTest(6, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
