package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM781_Div1_L1_EpicPartition
{
	public String createPartition(int N)
	{
		String s = "";
		int sum = 6*N*(6*N + 1) / 2;		
		if (sum % 4 == 0) {
			int goal = sum / 4;
			char[] c = new char[6*N];
			int suma = 0, sumb = 0;
			for (int i = 1; i < 4*N; i += 2)
			{
				suma += i;
				c[i-1] = 'a';			
			}

			for (int i = 4*N - 1; i > 0; i -=2) {	
				int x = goal - (suma - i);
				if (x < 6*N && c[x-1] != 'a') {
					c[i-1] = ' ';
					c[x-1] = 'a';
					suma = suma - i + x;
					//System.out.println (i + " " + x);
					break;
				}
			}
			
			for (int i = 2; i <= 4*N; i += 2)
			{
				sumb += i;
				c[i-1] = 'b';				
			}
			
			for (int i = 4*N; i > 0; i -=2) {
				int x = goal - (sumb - i);
				if (x < 6*N && c[x-1] != 'a' && c[x-1] != 'b') {
					c[i-1] = ' ';
					c[x-1] = 'b';
					sumb = sumb - i + x;
					//System.out.println (i + " " + x);
					break;
				}
			}
			
			int sumc = 0;
			for (int i = 1; i <= 6*N; i++) {
				if (c[i-1] != 'a' && c[i-1] != 'b') {
					c[i-1] = 'c';
					sumc += i;
				}
			}
			if (sumc == sum / 2) {
				s = new String(c);
			}
		}

		return s;
		
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, boolean hasAnswer, String p1) {
		System.out.print("Test " + testNum + ": [" + p0);
		System.out.println("]");
		SRM781_Div1_L1_EpicPartition obj;
		String answer;
		obj = new SRM781_Div1_L1_EpicPartition();
		long startTime = System.currentTimeMillis();
		answer = obj.createPartition(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p1 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p1);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		String p1;
		
		// ----- test 0 -----
		p0 = 1;
		p1 = "";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 2;
		p1 = "";
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 4;
		p1 = "aaabababbbbabbcccccccaac";
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 8;
		p1 = "abaaaaaabaabbaabbbbbbbbbbbbccccccccaaccccccacaac";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
