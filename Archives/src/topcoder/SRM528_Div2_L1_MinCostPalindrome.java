package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM528_Div2_L1_MinCostPalindrome
{
	public int getMinimum(String st, int oCost, int xCost)
	{
        int n = st.length();
        char[] s = st.toCharArray();
        int tot = 0;
        for (int i = 0, j = n-1; i < j; i++, j--)
        {
            if ((s[i] == 'o' && s[j] == 'x') ||
                (s[i] == 'x' && s[j] == 'o'))
                return -1;
            else
            {
                if (s[i] == s[j] && s[i] != '?')
                    continue;
                else if (s[i] == 'o' || s[j] == 'o')
                    tot += oCost;
                else if (s[i] == 'x' || s[j] == 'x')
                    tot += xCost;
                else
                {
                    tot += Math.min(oCost, xCost) * 2;
                }
            }
        }
        return tot;

	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, int p1, int p2, boolean hasAnswer, int p3) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + p1 + "," + p2);
		System.out.println("]");
		SRM528_Div2_L1_MinCostPalindrome obj;
		int answer;
		obj = new SRM528_Div2_L1_MinCostPalindrome();
		long startTime = System.currentTimeMillis();
		answer = obj.getMinimum(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p3);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p3;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		int p1;
		int p2;
		int p3;
		
		// ----- test 0 -----
		p0 = "oxo?xox?";
		p1 = 3;
		p2 = 5;
		p3 = 8;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "x??x";
		p1 = 9;
		p2 = 4;
		p3 = 8;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "ooooxxxx";
		p1 = 12;
		p2 = 34;
		p3 = -1;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "oxoxooxxxxooxoxo";
		p1 = 7;
		p2 = 4;
		p3 = 0;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = "?o";
		p1 = 6;
		p2 = 2;
		p3 = 6;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = "????????????????????";
		p1 = 50;
		p2 = 49;
		p3 = 980;
		all_right = KawigiEdit_RunTest(5, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 6 -----
		p0 = "o??oxxo?xoox?ox??x??";
		p1 = 3;
		p2 = 10;
		p3 = 38;
		all_right = KawigiEdit_RunTest(6, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
