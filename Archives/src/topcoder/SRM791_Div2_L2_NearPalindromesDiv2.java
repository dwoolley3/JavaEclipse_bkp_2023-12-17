package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM791_Div2_L2_NearPalindromesDiv2
{
	public String solve(String S)
	{
		char[] ch = S.toCharArray();
		int[] cnt = new int[26];
		int n = S.length();
		for (int i = 0; i < n; i++) {
			cnt[ch[i] - 'a']++;
		}
		
		for (int i = 0; i < 26; i++) {
			if (cnt[i] % 2 == 1) {
				for (int j = 0; j < n; j++) {
					if (ch[j]-'a' != i && cnt[ch[j]-'a'] %2 == 1) {
						cnt[i]++;
						cnt[ch[j]-'a']--;
						ch[j] = (char)('a' + i);
						break;
					}
				}				
			}			
		}		

		return new String(ch);
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, boolean hasAnswer, String p1) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"");
		System.out.println("]");
		SRM791_Div2_L2_NearPalindromesDiv2 obj;
		String answer;
		obj = new SRM791_Div2_L2_NearPalindromesDiv2();
		long startTime = System.currentTimeMillis();
		answer = obj.solve(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p1 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p1);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		String p1;
		
		// ----- test 0 -----
		p0 = "eerdrd";
		p1 = "eerdrd";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "abcdhgfe";
		p1 = "aacceffe";
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "topcoder";
		p1 = "codcodee";
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "aaabbbaa";
		p1 = "aaaabbaa";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
