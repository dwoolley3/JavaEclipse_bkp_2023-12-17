package topcoder;
import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM679_Div2_L2_ContestScoreboard
{
	@SuppressWarnings("unchecked")
	public int[] findWinner(String[] scores)
	{
		int n = scores.length;
		int[] ans = new int[n];
		String[] name = new String[n];
		HashMap<String,Integer> hm = new HashMap<>();
		ArrayList<Integer>[] sc = new ArrayList[n]; 
		ArrayList<Integer>[] dur = new ArrayList[n];
		ArrayList<Integer> allDur = new ArrayList<>();
		for (int i=0;i<n;i++) 
		{
			sc[i] = new ArrayList<Integer>();
			dur[i] = new ArrayList<Integer>();
		}
		
		for (int i = 0; i < n; i++)
		{
			String[] s = scores[i].split(" ");
			name[i] = s[0];
			hm.put(name[i], i);
			for (int j = 1; j < s.length; j++)
			{
				String[] num = s[j].split("/");
				sc[i].add(Integer.parseInt(num[0]));
				dur[i].add(Integer.parseInt(num[1]));
				allDur.add(Integer.parseInt(num[1]));
			}			
		}
		
		for (int duration : allDur)
		{
			for (int x = 0; x < 2; x++)
			{
				ArrayList<String> winners = new ArrayList<>();
				int d = duration + x;
				int max = 0;
				int[] score = new int[n];
				for (int i = 0; i < n; i++)
				{
					for (int j = 0; j < dur[i].size(); j++)
					{
						if (dur[i].get(j) < d)
						{
							score[i] += sc[i].get(j);
							if (score[i] > max) max = score[i];
						}
					}
				}
				
				for (int i = 0; i < n; i++)
					if (score[i] == max) winners.add(name[i]);
				Collections.sort(winners);
				ans[hm.get(winners.get(0))] = 1;
			}
		}
		
		return ans;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, int[] p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		SRM679_Div2_L2_ContestScoreboard obj;
		int[] answer;
		obj = new SRM679_Div2_L2_ContestScoreboard();
		long startTime = System.currentTimeMillis();
		answer = obj.findWinner(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p1.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print(p1[i]);
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(answer[i]);
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p1.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (answer[i] != p1[i]) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		int[] p1;
		
		// ----- test 0 -----
		p0 = new String[]{"TVG 1/1 1/3", "AJI 2/3", "AAA 1/3"};
		p1 = new int[]{1,1,1};
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = new String[]{"TVG 1/1 1/2 1/3","AJI 1/4 1/5 1/6"};
		p1 = new int[]{1,1};
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"GLP 1/114 1/195 1/171 1/19 1/146 1/29","BKPF 1/57 1/187 1/277 1/21 1/223 1/35"};
		p1 = new int[]{1,1};
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{"AAA 248/2 495/5 993/7","BBB 244/6 493/7 990/10","CCC 248/2 495/5 993/10"};
		p1 = new int[]{1,0,0};
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{"UBA 10/2 30/4 25/3 999/1000","UNC 1/3 3/20 40/50","UNLP 2/2 3/3 4/4 100/100","UNR 999/1000000 999/999999","UNS 999/100000000"};
		p1 = new int[]{1,0,1,1,0};
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
