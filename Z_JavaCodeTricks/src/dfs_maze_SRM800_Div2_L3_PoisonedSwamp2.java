//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;

public class dfs_maze_SRM800_Div2_L3_PoisonedSwamp2
{
	// Solution by ChittoorKurradu
	int n, m;
	char[][] G;
	boolean[][][] vis = new boolean[22][22][11];
	int[] dx = {-1, 1, 0, 0};
	int[] dy = {0, 0, -1, 1};
	
	public String cross(String[] swamp)
	{
		n = swamp.length;
		m = swamp[0].length();
		G = new char[n][m];
		for (int i = 0; i < n; i++) 
			G[i] = swamp[i].toCharArray();
		return dfs(0, 0,0) ? "possible" : "impossible";
	}
	
	boolean dfs(int r, int c, int p) {
		if (r < 0 || r >= n || c < 0 || c >= m || G[r][c] == '#')
			return false;
		if (r == n-1 && c == m-1)
			return true;
		if ('1' <= G[r][c] && G[r][c] <= '9') {
			p += G[r][c] - '0';
		}
		if (G[r][c] == 'S')
			p = 0;
		if (p >= 10)
			return false;
		if (vis[r][c][p]) 
			return false;
		vis[r][c][p] = true;
		for (int i = 0; i < 4; i++) {
			int nr = r + dx[i];
			int nc = c + dy[i];
			if (dfs(nr, nc, p))
				return true;
		}
		return false;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, String p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		dfs_maze_SRM800_Div2_L3_PoisonedSwamp2 obj;
		String answer;
		obj = new dfs_maze_SRM800_Div2_L3_PoisonedSwamp2();
		long startTime = System.currentTimeMillis();
		answer = obj.cross(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p1 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p1);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		String p1;
		
		// ----- test 0 -----
		p0 = new String[]{".....","####.",".....",".####","....."};
		p1 = "possible";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{".....","####.","97...","9#2##","97..."};
		p1 = "possible";
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{".111111111.",".#########.","..22222...."};
		p1 = "possible";
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{".#222#111","4#S#2#1#S","4#3#S#1#9","S33#111#."};
		p1 = "possible";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new String[]{"..111111111111..","###############."};
		p1 = "impossible";
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = new String[]{"..111111111111..","#######S#######."};
		p1 = "possible";
		all_right = KawigiEdit_RunTest(5, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 6 -----
		p0 = new String[]{"..#.#.","..#.#.","#5#.5.","....#."};
		p1 = "impossible";
		all_right = KawigiEdit_RunTest(6, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 7 -----
		p0 = new String[]{".1.#.",".9.#.",".###.","2#.1.",".#.7."};
		p1 = "impossible";
		all_right = KawigiEdit_RunTest(7, p0, true, p1) && all_right;		
		// ------------------
		
		// ----- test 5 -----
		p0 = new String[]{"..111111111111..","#######S#######."};
		p1 = "possible";
		all_right = KawigiEdit_RunTest(5, p0, true, p1) && all_right;
		
		
		// ----- test 6 -----
		p0 = new String[]{"..111111111111......",
				"#######.#######..2..",
				"#######....####.....",
				"#######2##.####.....",
				"...............####.",
				"111111111111111###..",
				".................#.#",
				".555555555555...#..#",
				"................#..#",
				"................#..#",
				"...............#...#",
				"...............#...#",
				"...............#...#",
				"................##..",
				"................##..",
				"................##..",
				"................##..",
				"..5555..........##..",
				"....S...........##..",
				"................##.."};
		p1 = "possible";
		all_right = KawigiEdit_RunTest(6, p0, true, p1) && all_right;
		
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
