package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM752_Div1_L1_ReconstructNumber
{
	public String smallest(String comparisons)
	{
		int n = comparisons.length();
		int[] a = new int [n+1];
		a[0] = 1;
		for (int i = 1; i <= n; i++) {
			char c = comparisons.charAt(i-1);
			if (c == '=') 
				a[i] = a[i-1];
			else if (c == '<') {
				a[i] = a[i-1] + 1;
				if (a[i] > 9) return "";
			} else if (c == '>') {
				if (a[i-1] > 0) {
					a[i] = 0;
				} else { // prior digit is 0
					char cprior = ' ';
					for (int j = i-1; j >= 0; j--) {						
						a[j]++;
						if (a[j] > 9) return "";
						if (j > 0) {
							cprior = comparisons.charAt(j-1);
							if (cprior == '>' && a[j-1] > a[j]) break;
							if (cprior == '!' && a[j-1] != a[j]) break;
							if (cprior == '<' && a[j-1] < a[j]) break;
						}
					}
				}
			}
			else if (c == '!') {
				if (a[i-1] == 0)
					a[i] = 1;
				// else a[i] = 0
			}
			
		}
		StringBuilder sb = new StringBuilder();
		for (int i : a) 
			sb.append(i);
		return sb.toString();
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, boolean hasAnswer, String p1) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"");
		System.out.println("]");
		SRM752_Div1_L1_ReconstructNumber obj;
		String answer;
		obj = new SRM752_Div1_L1_ReconstructNumber();
		long startTime = System.currentTimeMillis();
		answer = obj.smallest(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p1 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p1);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		String p1;
		
		// ----- test 0 -----
		p0 = ">=!<";
		p1 = "10012";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "====!====";
		p1 = "1111100000";
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "";
		p1 = "1";
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>";
		p1 = "";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = "><<>><=<=>=>";
		p1 = "1012101122110";
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = ">>>>>>>>>";
		p1 = "9876543210";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		// ----- test 3 -----
		p0 = ">>>>>>>>><<<<=!";
		p1 = "9876543210123440";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		// ----- test 3 -----
		p0 = ">>>>>>>>><<<<=!>";
		p1 = "98765432101234410";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		// ----- test 3 -----
		p0 = ">>>>>>>>><<<<=!>>";
		p1 = "987654321012344210";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		// ----- test 3 -----
		p0 = ">>>>>>>>><<<<=!>>>>";
		p1 = "98765432101235543210";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		// ----- test 3 -----
		p0 = ">>>>>>>>><<<<<<<<<=!>>>>>>>>";
		p1 = "98765432101234567899876543210";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "<<<<<<<<<";
		p1 = "";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "<<<<<<<<=!>>>>>>>>";
		p1 = "1234567899876543210";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "<<<<<<<<=!>>>>>>>>>";
		p1 = "";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "!!!!!!!!>>>==<>>";
		p1 = "10101010321000210";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = ">";
		p1 = "10";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "<";
		p1 = "12";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "=";
		p1 = "11";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "!";
		p1 = "10";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
				
		// ----- test 3 -----
		p0 = ">>>>>>>>!<>>>";
		p1 = "87654321013210";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = ">>>>>>>>!!<<<<<<<<<>>>>>>>>><";
		p1 = "876543210101234567898765432101";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = ">>>>>>>>!!<<<<<<<<<>>>>>>>>><>>>>>>>>>";
		p1 = "876543210101234567898765432109876543210";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		
		// ----- test 3 -----
		p
		p1 = "876543210101234567898765432109876543210987654321010123456789876543210987654321098765432101012345678987654321098765432109876543210101234567898765432109876543210987654321010123456789876543210987654321098765432101012345678987654321098765432109876543210101234567898765432109876543210987654321010123456789876543210987654321098765432101012345678987654321098765432109876543210101234567898765432109876543210987654321010123456789876543210987654321098765432101012345678987654321098765432109876543210101234567898765432109876543210987654321010123456789876543210987654321098765432101012345678987654321098765432109876543210101234567898765432109876543210987654321010123456789876543210987654321098765432101012345678987654321098765432109876543210101234567898765432109876543210987654321010123456789876543210987654321098765432101012345678987654321098765432109876543210101234567898765432109876543210987654321010123456789876543210987654321098765432101012345678987654321098765432109876543210101234567898765432109876543210987654321010123456789876543210987654321098765432101012345678987654321098765432109876543210101234567898765432109876543210987654321010123456789876543210987654321098765432101012345678987654321098765432109876543210101234567898765432109876543210987654321010123456789876543210987654321098765432101012345678987654321098765432109876543210101234567898765432109876543210987654321010123456789876543210987654321098765432101012345678987654321098765432109876543210101234567898765432109876543210987654321010123456789876543210987654321098765432101012345678987654321098765432109876543210101234567898765432109876543210987654321010123456789876543210987654321098765432101012345678987654321098765432109876543210101234567898765432109876543210987654321010123456789876543210987654321098765432101012345678987654321098765432109876543210101234567898765432109876543210987654321010123456789876543210987654321098765432101012345678987654321098765432109876543210101234567898765432109876543210987654321010123456789876543210987654321010";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "!!<<<<<<<<<";
		p1 = "120123456789";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
