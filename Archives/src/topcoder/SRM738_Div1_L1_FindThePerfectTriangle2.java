package topcoder;
import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM738_Div1_L1_FindThePerfectTriangle2
{
	public int[] constructTriangle(int area, int perimeter)
	{
		ArrayList<Integer> a = new ArrayList<>();
		ArrayList<Integer> b = new ArrayList<>();
		ArrayList<Integer> c = new ArrayList<>();
		for (int n = 1; n < 1000; n++)
			for (int m = n+1; m < 1000; m++) {
				a.add(m*m - n*n);
				b.add(2 * m * n);
				c.add(m*m + n*n);
			}
		int total = a.size();
		int x1 = 0, y1 = 0, x2 = 0, y2 = 0, x3 = 0, y3 = 0;
		boolean ok = false;
		for (int i = 0; i < total && !ok; i++) {
			int[] d = new int[] {a.get(i),b.get(i),c.get(i)};
			Arrays.sort(d);
			int p = a.get(i)+b.get(i)+c.get(i);
			if (p == perimeter)
			{
				if (d[0]*d[1] == area*2) {
					x2 = d[0]; 
					x3 = d[0]; y3 = d[1];
					ok = true;
				}
			}
			else if (d[2]+d[2]+d[1]+d[1] == perimeter)
			{
				if (d[0]*d[1] == area) {
					x2 = d[1]; y2 = d[0]; 
					y3 = 2 * d[1];
					ok = true;
					//System.out.println(d[0] + " " + d[1] + " " + d[2]);
				}
			}
			else if (d[2]+d[2]+d[0]+d[0] == perimeter)
			{
				if (d[0]*d[1] == area) {
					x2 = d[0]; y2 = d[1]; 
					y3 = 2 * d[0];
					ok = true;
					//System.out.println(d[0] + " " + d[1] + " " + d[2]);
				}
			}
		}
		
		if (!ok) return new int[] {};
		return new int[] {x1,y1,x2,y2,x3,y3};
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, boolean hasAnswer, int[] p2) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1);
		System.out.println("]");
		SRM738_Div1_L1_FindThePerfectTriangle2 obj;
		int[] answer;
		obj = new SRM738_Div1_L1_FindThePerfectTriangle2();
		long startTime = System.currentTimeMillis();
		answer = obj.constructTriangle(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p2.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print(p2[i]);
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(answer[i]);
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p2.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (answer[i] != p2[i]) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		int[] p2;
		
		// ----- test 0 -----
		p0 = 6;
		p1 = 11;
		p2 = new int[]{};
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 6;
		p1 = 12;
		p2 = new int[]{1,1,1,4,5,4};
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 37128;
		p1 = 882;
		p2 = new int[]{137,137,273,410,1,410};
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 12;
		p1 = 18;
		p2 = new int[]{1,1,4,5,1,9};
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 18096;
		p1 = 928;
		p2 = new int[]{1,1,1,88,417,88};
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = 1000000;
		p1 = 1000;
		p2 = new int[]{};
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = 10920;
		p1 = 840;
		p2 = new int[]{0,0,56,0,56,390};
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = 25080;
		p1 = 900;
		p2 = new int[]{0,0,209,120,0,418};
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
