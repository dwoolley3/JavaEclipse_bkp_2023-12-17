package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM587_Div2_L3_ThreeColorabilityEasy
{
	public String isColorable(String[] cells)
	{
        int h = cells.length;
        int w = cells[0].length();
        int cnt = 0;

        boolean good = true;
        for (int i = 0; i < h-1; i++)
            for (int j = 0; j < w-1; j++)
            {
                cnt = 0;
                if (cells[i].charAt(j) == 'Z') cnt++;
                if (cells[i+1].charAt(j) == 'Z') cnt++;
                if (cells[i].charAt(j+1)== 'Z') cnt++;
                if (cells[i+1].charAt(j+1) == 'Z') cnt++;
                if (cnt == 3 || cnt == 1) good = false;
            }

        if (good)
            return "Yes";
        return "No";
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, String p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		SRM587_Div2_L3_ThreeColorabilityEasy obj;
		String answer;
		obj = new SRM587_Div2_L3_ThreeColorabilityEasy();
		long startTime = System.currentTimeMillis();
		answer = obj.isColorable(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p1 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p1);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		String p1;
		
		// ----- test 0 -----
		p0 = new String[]{"Z"};
		p1 = "Yes";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"NZ","NZ"};
		p1 = "Yes";
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{"ZZZ","ZNZ"};
		p1 = "No";
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{"NZNZNNN","NNZNNNZ","NNNNZZZ","ZZZNZZN","ZZNZNNN","NZZZZNN","ZZZNZNN"};
		p1 = "No";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new String[]{"ZZZZ","ZZZZ","ZZZZ"};
		p1 = "Yes";
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
