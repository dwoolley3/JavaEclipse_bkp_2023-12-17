package topcoder;
import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM815_Div2_L2_DevuAndRabbitNumbering
{
	public String canRenumber(int[] rabbitIds)
	{
		String can = "can", cannot="cannot";
		int n = rabbitIds.length;
		//if (n <= 3) return can;
		
		Arrays.sort(rabbitIds);
		int[] c = new int[1001];
		for (int r : rabbitIds) {
			c[r]++;
			if (c[r] > 3) return cannot; 
		}
		
		
		rabbitIds[0]--;
		for (int i = 1; i < n; i++) {
			if (rabbitIds[i] - 1 > rabbitIds[i-1]) {
				rabbitIds[i]--;
			} else if (rabbitIds[i] == rabbitIds[i-1]) {
				rabbitIds[i]++;
			} else if (rabbitIds[i] < rabbitIds[i-1]) {
				return cannot;
			} // else keep same
			
		}
		return can;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, boolean hasAnswer, String p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}");
		System.out.println("]");
		SRM815_Div2_L2_DevuAndRabbitNumbering obj;
		String answer;
		obj = new SRM815_Div2_L2_DevuAndRabbitNumbering();
		long startTime = System.currentTimeMillis();
		answer = obj.canRenumber(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p1 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p1);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		String p1;
		

		
		// ----- test 0 -----
		p0 = new int[]{1,2,3};
		p1 = "can";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{1,2,2};
		p1 = "can";
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{2,4,2,2,1,2};
		p1 = "cannot";
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{1,2,4,2,6,6,7};
		p1 = "can";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new int[]{960,578,296,414,352,610,872,556,113,818,194,804,141,859,761,887,3,952,234,667,196,693,783};
		p1 = "can";
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = new int[]{97,64,22,17,75,97,85,68,35,82,64,10,71,11,64,64,94,52,28,40,48,46,5,82,39,65,2,93,43,50,44,90,69,72,94,6,62,17,12,12,84,33,38};
		p1 = "cannot";
		all_right = KawigiEdit_RunTest(5, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = new int[]{1,1,1};
		p1 = "can";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = new int[]{1,1,1,2,2};
		p1 = "cannot";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = new int[]{1,1,1,2,3,3,3};
		p1 = "cannot";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = new int[]{1,1,1,2,3,3};
		p1 = "cannot";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		
		// ----- test 0 -----
		p0 = new int[]{1,1,1,2,3,5,5};
		p1 = "can";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		
		// ----- test 0 -----
		p0 = new int[]{1,1,1,2,3,5,5,5};
		p1 = "cannot";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = new int[]{1,1,1,2,3,5,5,7,7,7};
		p1 = "cannot";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------

		// ----- test 0 -----
		p0 = new int[]{1,1,1,2,3,5,5,8,8,8};
		p1 = "can";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
