package topcoder;
import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class SRM767_Div2_L1_MojtabaMahdiDooz
{
	public String play(String board)
	{
		int n = board.length();
		int p = board.indexOf("BB");
		if (p == -1) p = n;
		String ans = "";
		int i = p-1;
		for (i = p-1; i > 0; i--) {
			char c = board.charAt(i);
			if (c == '-') {
				ans = "-" + board.substring(1,i) + "W" + board.substring(i+1);
				break;
			}
		}
		if (i == 0) return board;
		
		return ans;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, boolean hasAnswer, String p1) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"");
		System.out.println("]");
		SRM767_Div2_L1_MojtabaMahdiDooz obj;
		String answer;
		obj = new SRM767_Div2_L1_MojtabaMahdiDooz();
		long startTime = System.currentTimeMillis();
		answer = obj.play(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p1 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p1);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		String p1;
		
		// ----- test 0 -----
		p0 = "W----";
		p1 = "----W";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "WB-B-B-";
		p1 = "-B-B-BW";
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "W--BB---";
		p1 = "--WBB---";
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "W";
		p1 = "W";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "W-";
		p1 = "-W";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "WB";
		p1 = "WB";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "WBB";
		p1 = "WBB";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		
		// ----- test 4 -----
		p0 = "W-B--B---BB-";
		p1 = "--B--B--WBB-";
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
