package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class Rookie_SRM11_Div1_L2_TriangleCounting
{
	public int count(int[] x, int[] y)
	{
		int n = x.length;
		int tri = 0;
		for (int i = 0; i < n-2; i++)
			for (int j = i+1; j < n-1; j++)
				for (int k = j+1; k < n; k++) {
//					if (pointSame(x[i],y[i],x[j],y[j])) continue;
//					if (pointSame(x[i],y[i],x[k],y[k])) continue;
//					if (pointSame(x[j],y[j],x[k],y[k])) continue;
					if (isColinear(x[i],y[i],x[j],y[j],x[k],y[k])) continue;
					tri++;
				}
		return tri;
	}
	
//	private boolean pointSame(int x1, int y1, int x2, int y2) {
//		return x1 == x2 && y1 == y2; 
//	}
	
	private boolean isColinear(int ax, int ay, int bx, int by, int cx, int cy) {
		return (ay-by)*(bx-cx) == (ax-bx)*(by-cy); //check slopes 
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		Rookie_SRM11_Div1_L2_TriangleCounting obj;
		int answer;
		obj = new Rookie_SRM11_Div1_L2_TriangleCounting();
		long startTime = System.currentTimeMillis();
		answer = obj.count(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int[] p1;
		int p2;
		
		// ----- test 0 -----
		p0 = new int[]{0,2,4};
		p1 = new int[]{0,5,3};
		p2 = 1;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{0,2,4,6};
		p1 = new int[]{0,5,3,15};
		p2 = 3;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{0,2,6};
		p1 = new int[]{0,5,15};
		p2 = 0;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{0,2,4,6,8};
		p1 = new int[]{0,5,3,15,6};
		p2 = 8;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new int[]{0,1,2,3,4,5,6};
		p1 = new int[]{1,2,3,4,5,6,7};
		p2 = 0;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = new int[]{0,0,1};
		p1 = new int[]{0,0,1};
		p2 = 0;
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
