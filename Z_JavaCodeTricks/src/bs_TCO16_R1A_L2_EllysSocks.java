import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class bs_TCO16_R1A_L2_EllysSocks
{
	public int getDifference(int[] S, int P)
	{
		Arrays.sort(S);
		int lo = -1, hi = 1_000_000_000;
		while (lo + 1 < hi) {
			int mid = lo + (hi - lo) / 2;
			if (check(mid, S, P))
				hi = mid;
			else
				lo = mid;
		}
		
		return hi;
	}
	
	private boolean check(int dif, int[] S, int P)
	{
		int cnt = 0;
		for (int i = 1; i < S.length; i++)
			if (S[i] - S[i-1] <= dif) {
				cnt++;
				i++;
			}
		return cnt >= P;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + p1);
		System.out.println("]");
		bs_TCO16_R1A_L2_EllysSocks obj;
		int answer;
		obj = new bs_TCO16_R1A_L2_EllysSocks();
		long startTime = System.currentTimeMillis();
		answer = obj.getDifference(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int p1;
		int p2;
		
		// ----- test 0 -----
		p0 = new int[]{42,37,84,36,41,42};
		p1 = 2;
		p2 = 1;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{42,37,84,36,41,42};
		p1 = 3;
		p2 = 42;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{5,2,8,8,6,7,3,7,4,2,4,5,3,6};
		p1 = 7;
		p2 = 0;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{17,3,13,3,2,17,11,5,5,7,11,7,13,19};
		p1 = 7;
		p2 = 4;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new int[]{795755685,581869303,404620563,708632712,545404205,133711906,372047868,949333986,579004999,323567404,418932836,944672732,196140741,809094427,946129058,30574577,182506778,15198493,150802600,138749191,676943010,177512688,126303054,81133258,183966551,471852627,84672537,867128744,857788837,275731772,609397213,20544910,811450930,483031419,361913171,547204602,892462744,522136404,173978710,131752569,478582453,867889991,153380496,551745921,647984700,910208077,283496852,368550363,379821990,712568903,40498239,113911604,103237637,39073007,684602223,812852787,479711181,746745228,735241235,296707007,262522458,870676136,136721027,359573809,189375153,547914047,198304613,640439653,417177802,25475624,758242872,764919655,310701088,537655880,361931892,14685971,213794688,107063881,147944789,444803289,884392679,540721924,638781100,902841101,7097711,219972874,879609715,156513984,802611721,755486970,103522060,967048445,913778155,94092596,519074050,884870761,248268555,339840186,53612697,826647953};
		p1 = 42;
		p2 = 12866316;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
