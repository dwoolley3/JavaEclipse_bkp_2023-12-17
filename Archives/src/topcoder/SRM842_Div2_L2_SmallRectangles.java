package topcoder;
import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM842_Div2_L2_SmallRectangles
{
	public long count(int[] Aprefix, int[] Bprefix, int AL, int BL, int AM, int BM, int seed)
	{
		int[] a = new int[AL];
		int[] b = new int[BL];
		
		HashSet<Integer> hsa = new HashSet<>();
		HashSet<Integer> hsb = new HashSet<>();
		HashSet<Integer> hsab = new HashSet<>();
		
		int pa = Aprefix.length;
		for (int i = 0; i < pa; i++) {
			a[i] = Aprefix[i];
			hsa.add(a[i]);
			hsab.add(a[i]);
		}
		
		long mod = (long)Math.pow(2,31);
		long state = seed;
		for (int i = pa; i < AL; i++) {
			state = (int)((1L * state * 1103515245 + 12345) % mod);
			a[i] = 1 + (int)(state % AM);
			hsa.add(a[i]);
			hsab.add(a[i]);
		}
		
		int pb = Bprefix.length;
		for (int i = 0; i < pb; i++) {
			b[i] = Bprefix[i];
			hsb.add(b[i]);
			hsab.add(b[i]);
		}
		
		//state = seed;
		for (int i = pb; i < BL; i++) {
			state = (int)((1L * state * 1103515245 + 12345) % mod);
			b[i] = 1 + (int)(state % BM);
			hsb.add(b[i]);
			hsab.add(b[i]);
		}		
		
		int apb = hsa.size() + hsb.size();
		int uniq = hsab.size();
		int sub = apb - uniq;
		long ans = 1L * hsa.size() * hsb.size() - 1L*(sub-1)*sub/2;

		return ans;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, int p2, int p3, int p4, int p5, int p6, boolean hasAnswer, long p7) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}" + "," + p2 + "," + p3 + "," + p4 + "," + p5 + "," + p6);
		System.out.println("]");
		SRM842_Div2_L2_SmallRectangles obj;
		long answer;
		obj = new SRM842_Div2_L2_SmallRectangles();
		long startTime = System.currentTimeMillis();
		answer = obj.count(p0, p1, p2, p3, p4, p5, p6);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p7);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p7;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int[] p1;
		int p2;
		int p3;
		int p4;
		int p5;
		int p6;
		long p7;
		
		// ----- test 0 -----
		p0 = new int[]{2,2};
		p1 = new int[]{3,4,3};
		p2 = 2;
		p3 = 3;
		p4 = 1000;
		p5 = 1000;
		p6 = 0;
		p7 = 2L;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, p4, p5, p6, true, p7) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{2,3};
		p1 = new int[]{2,3};
		p2 = 2;
		p3 = 2;
		p4 = 1000;
		p5 = 1000;
		p6 = 0;
		p7 = 3L;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, p4, p5, p6, true, p7) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{4};
		p1 = new int[]{7,3};
		p2 = 5;
		p3 = 7;
		p4 = 10;
		p5 = 20;
		p6 = 47;
		p7 = 28L;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, p4, p5, p6, true, p7) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{};
		p1 = new int[]{};
		p2 = 51000;
		p3 = 45000;
		p4 = 999999973;
		p5 = 999999978;
		p6 = 4247;
		p7 = 2295000000L;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, p4, p5, p6, true, p7) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new int[]{};
		p1 = new int[]{};
		p2 = 1;
		p3 = 1;
		p4 = 100;
		p5 = 100;
		p6 = 100;
		p7 = 1L;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, p3, p4, p5, p6, true, p7) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = new int[]{};
		p1 = new int[]{};
		p2 = 12;
		p3 = 34;
		p4 = 3;
		p5 = 3;
		p6 = 13124;
		p7 = 6L;
		all_right = KawigiEdit_RunTest(5, p0, p1, p2, p3, p4, p5, p6, true, p7) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
