package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;

// Wrong Answer

public class SRM843_Div2_L3_ChristmasSongTrauma
{
	public double fewest(int[] playTime, int visitTime)
	{
		int playTotal = 0;
		int n = playTime.length;
		int[] pt = new int[n+n];
		for (int i = 0; i < n; i++) {
			pt[i] = playTime[i];
			pt[i+n] = pt[i];
			playTotal += pt[i];
		}
		if (visitTime >= playTotal || n == 1) return 1.0;
		
		int[] runt = new int[n+n+1];
		runt[0] = 0;
		for (int i = 1; i < n*2; i++) {
			runt[i] = runt[i-1] + pt[i];
		}

		
		int[] distinct = new int[n*2];
		for (int i = 0; i < n; i++) {
			for (int j = i+1; j < 2*n; j++) {
				if (visitTime <= runt[j] - runt[i] ) {
					distinct[j-i]++;
				}
			}
		}
		int min = n*2;
		for (int i = 0; i < n*2; i++) {
			if (distinct[i] > 0)
			{
				min = i; break;
			}
		}
		
		int good = 0;
		for (int i = 0; i < n; i++) {
			for (int j = i+1; j < 2*n; j++) {
				if (visitTime <= runt[j] - runt[i] && j-i == min) {
					good += (runt[j] - runt[i]) - visitTime + 1;
				}
			}
		}
		
		double ans = 1.0 * good / playTotal;
		return ans;	
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int p1, boolean hasAnswer, double p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + p1);
		System.out.println("]");
		SRM843_Div2_L3_ChristmasSongTrauma obj;
		double answer;
		obj = new SRM843_Div2_L3_ChristmasSongTrauma();
		long startTime = System.currentTimeMillis();
		answer = obj.fewest(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = Math.abs(p2 - answer) <= 1e-9 * Math.max(1.0, Math.abs(p2));
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int p1;
		double p2;
		
		// ----- test 0 -----
		p0 = new int[]{50,100,100,100,70,90,90};
		p1 = 300;
		p2 = 0.0016666666666666668D;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{100,100,100,100,100,100,100,100};
		p1 = 301;
		p2 = 1.0D;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{312};
		p1 = 15241235;
		p2 = 1.0D;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{50,100,100,100,70,90,90};
		p1 = 310;
		p2 = 0.41D;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{70,90,90,50,100,100,100};
		p1 = 310;
		p2 = 0.41D;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		
		// ----- test 3 -----
		p0 = new int[]{100,100,100,70,90,90,50};
		p1 = 310;
		p2 = 0.41D;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{312};
		p1 = 311;
		p2 = 1.0D;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
