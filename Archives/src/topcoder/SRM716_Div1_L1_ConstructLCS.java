package topcoder;
import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM716_Div1_L1_ConstructLCS
{
	public String construct(int ab, int bc, int ca)
	{
		int[] ar = new int[]{ab, bc, ca};

		int mini = 0;
		if (ab <= bc && ab <= ca) mini = 0;
		else if (bc <= ab && bc <= ca) mini = 1;
		else mini = 2;
		int min = ar[mini];
		
		String[] s = new String[3];
		for (int i = 0; i < 3; i++)
			s[i] = FillString(min, '1');

		s[(mini + 1)%3] += FillString(ar[(mini+1)%3] - min, '0');
		s[(mini + 2)%3] += FillString(ar[(mini+1)%3] - min, '0');
		
		s[(mini + 2)%3] = FillString(ar[(mini+2)%3] - min, '1') + s[(mini + 2)%3];
		s[(mini + 3)%3] = FillString(ar[(mini+2)%3] - min, '1') + s[(mini + 3)%3];
		
		return s[0] + " " + s[1] + " " + s[2];
	}

	private String FillString(int min, char c) {
		char[] chars = new char[min];
		Arrays.fill(chars, c);
		return new String(chars);
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, int p2, boolean hasAnswer, String p3) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2);
		System.out.println("]");
		SRM716_Div1_L1_ConstructLCS obj;
		String answer;
		obj = new SRM716_Div1_L1_ConstructLCS();
		long startTime = System.currentTimeMillis();
		answer = obj.construct(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p3 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p3);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		int p2;
		String p3;
		
		// ----- test 0 -----
		p0 = 3;
		p1 = 4;
		p2 = 2;
		p3 = "101 1010101 1111";
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 7;
		p1 = 4;
		p2 = 4;
		p3 = "10101010 1010101 1011";
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 8;
		p1 = 7;
		p2 = 8;
		p3 = "110101001011 010101101 10101010";
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 8;
		p1 = 6;
		p2 = 7;
		p3 = "110101010 10101010 1111010";
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 15;
		p1 = 17;
		p2 = 19;
		p3 = "000100101101111011000 11110111010011101010 100100001010101001010101000011111";
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = 50;
		p1 = 50;
		p2 = 50;
		p3 = "11111111111111111111111111111111111111111111111111 11111111111111111111111111111111111111111111111111 11111111111111111111111111111111111111111111111111";
		all_right = KawigiEdit_RunTest(5, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = 2;
		p1 = 3;
		p2 = 4;
		p3 = "101 1010101 1111";
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = 3;
		p1 = 2;
		p2 = 4;
		p3 = "101 1010101 1111";
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
