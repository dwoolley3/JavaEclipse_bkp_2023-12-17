package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM590_Div2_L2_FoxAndGo
{
    int[] dx = new int[] { 0, 0, 1, -1 };
    int[] dy = new int[] { 1, -1, 0, 0 };
    int n;
    char[][] b;
    int compNum = 0, cnt = 1;
    int[][] comp;

	public int maxKill(String[] board)
	{
        n = board.length;
        int maxSum = 0;
     
        b = new char[n][n];

        for (int i = 0; i < n; i++)
            for (int j = 0; j < n; j++)
                b[i][j] = board[i].charAt(j);

        for (int ii = 0; ii < n; ii++)
            for (int jj = 0; jj < n; jj++)
            {
                if (b[ii][jj] != '.') continue;

                int[] aCnt = new int[n * n];
                int[] eCnt = new int[n * n];
                comp = new int[n][n];   
                b[ii][jj] = 'x';
                compNum = 0;

                for (int i = 0; i < n; i++)
                    for (int j = 0; j < n; j++)
                    {
                        if (b[i][j] == 'o' && comp[i][j] == 0)
                        {
                            compNum++;
                            comp[i][j] = compNum;
                            cnt = 1;
                            branch(i, j);
                            aCnt[compNum] = cnt;
                            for (int k = 0; k < n; k++)
                                for (int l = 0; l < n; l++)
                                {
                                    if (b[k][l] == '.' &&
                                        ((k + 1 < n && comp[k + 1][l] == compNum)
                                        || (k - 1 >= 0 && comp[k - 1][l] == compNum)
                                        || (l + 1 < n && comp[k][l + 1] == compNum)
                                        || (l - 1 >= 0 && comp[k][l - 1] == compNum)))
                                        eCnt[compNum]++;
                                }
                        }
                    }
                int sum = 0;
                for (int i = 1; i <= compNum; i++)
                    if (eCnt[i] == 0)
                        sum += aCnt[i];

                if (sum > maxSum) maxSum = sum;
                b[ii][jj] = '.';
            }
        return maxSum;
	}

    public void branch(int i, int j)
    {
        for (int k = 0; k < 4; k++)
        {
            int ni = i + dx[k];
            int nj = j + dy[k];
            if (ni < 0 || nj < 0 || ni >= n || nj >= n)
                continue;
            if (b[ni][nj] == 'o' && comp[ni][nj] == 0)
            {
                comp[ni][nj] = compNum;
                cnt++;
                branch(ni, nj);
            }
        }
    }
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		SRM590_Div2_L2_FoxAndGo obj;
		int answer;
		obj = new SRM590_Div2_L2_FoxAndGo();
		long startTime = System.currentTimeMillis();
		answer = obj.maxKill(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		int p1;
		
		// ----- test 0 -----
		p0 = new String[]{".....","..x..",".xox.",".....","....."};
		p1 = 1;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"ooooo","xxxxo","xxxx.","xxxx.","ooooo"};
		p1 = 6;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{".xoxo","ooxox","oooxx","xoxox","oxoox"};
		p1 = 13;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{".......",".......",".......","xxxx...","ooox...","ooox...","ooox..."};
		p1 = 9;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new String[]{".......",".xxxxx.",".xooox.",".xo.ox.",".xooox.",".xxxxx.","......."};
		p1 = 8;
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = new String[]{"o.xox.o","..xox..","xxxoxxx","ooo.ooo","xxxoxxx","..xox..","o.xox.o"};
		p1 = 12;
		all_right = KawigiEdit_RunTest(5, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 6 -----
		p0 = new String[]{".......","..xx...",".xooox.",".oxxox.",".oxxxo.","...oo..","......."};
		p1 = 4;
		all_right = KawigiEdit_RunTest(6, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 7 -----
		p0 = new String[]{".ox....","xxox...","..xoox.","..xoox.","...xx..",".......","......."};
		p1 = 5;
		all_right = KawigiEdit_RunTest(7, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 8 -----
		p0 = new String[]{"...................","...................","...o..........o....","................x..","...............x...","...................","...................","...................","...................","...................","...................","...................","...................","...................","................o..","..x................","...............x...","...................","..................."};
		p1 = 0;
		all_right = KawigiEdit_RunTest(8, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
