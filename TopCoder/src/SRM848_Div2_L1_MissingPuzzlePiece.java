import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM848_Div2_L1_MissingPuzzlePiece
{
	public String identify(int R, int C, String[] pieces)
	{
		int n = pieces.length;
		HashSet<String> hs = new HashSet<>();
		for (int i = 0; i < n; i++) {
			hs.add(pieces[i]);
		}
		for (int i = 0; i < R; i++) {
			for (int j = 1; j <= C; j++) {
				char ch = (char)('A' + i);
				String s = "" + ch; 
				s += j;
				if (!hs.contains(s)) {
					return s;
				}
			}		
		}
		return "-1";
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, String[] p2, boolean hasAnswer, String p3) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + "{");
		for (int i = 0; p2.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p2[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		SRM848_Div2_L1_MissingPuzzlePiece obj;
		String answer;
		obj = new SRM848_Div2_L1_MissingPuzzlePiece();
		long startTime = System.currentTimeMillis();
		answer = obj.identify(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p3 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p3);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		String[] p2;
		String p3;
		
		// ----- test 0 -----
		p0 = 1;
		p1 = 1;
		p2 = new String[]{};
		p3 = "A1";
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 3;
		p1 = 3;
		p2 = new String[]{"A1","B1","C1","C2","C3","B3","A3","A2"};
		p3 = "B2";
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 3;
		p1 = 3;
		p2 = new String[]{"A1","A2","A3","B1","B3","C1","C2","C3"};
		p3 = "B2";
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 1;
		p1 = 12;
		p2 = new String[]{"A1","A3","A5","A7","A9","A2","A4","A6","A8","A10","A12"};
		p3 = "A11";
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 1;
		p1 = 12;
		p2 = new String[]{"A1","A3","A5","A7","A9","A2","A4","A6","A8","A10","A11"};
		p3 = "A12";
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
