package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM558_Div2_L1_SurroundingGameEasy
{
	public int score(String[] cost, String[] benefit, String[] stone)
	{
        int r = cost.length;
        int c = cost[0].length();
        int i, j;
        int cos = 0, ben = 0;
        for (i = 0; i < r; i++)
            for (j = 0; j < c; j++)
            {
                if (stone[i].charAt(j) == 'o')
                {
                    cos += cost[i].charAt(j) - '0';
                    ben += benefit[i].charAt(j) - '0';
                }
                else
                {
                    if ((i - 1 >= 0 && stone[i - 1].charAt(j) == '.')
                        || (i + 1 < r && stone[i + 1].charAt(j) == '.')
                        || (j - 1 >= 0 && stone[i].charAt(j-1) == '.')
                        || (j + 1 < c && stone[i].charAt(j+1) == '.'))
                    { }
                    else
                    {
                        ben += benefit[i].charAt(j) - '0';
                    }                        
                }               
            }
        return ben - cos;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, String[] p1, String[] p2, boolean hasAnswer, int p3) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p1[i] + "\"");
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p2.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p2[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		SRM558_Div2_L1_SurroundingGameEasy obj;
		int answer;
		obj = new SRM558_Div2_L1_SurroundingGameEasy();
		long startTime = System.currentTimeMillis();
		answer = obj.score(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p3);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p3;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		String[] p1;
		String[] p2;
		int p3;
		
		// ----- test 0 -----
		p0 = new String[]{"21","12"};
		p1 = new String[]{"21","12"};
		p2 = new String[]{".o","o."};
		p3 = 4;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"99","99"};
		p1 = new String[]{"11","11"};
		p2 = new String[]{".o","o."};
		p3 = -14;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{"888","888","888"};
		p1 = new String[]{"000","090","000"};
		p2 = new String[]{"...",".o.","..."};
		p3 = 1;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{"4362","4321"};
		p1 = new String[]{"5329","5489"};
		p2 = new String[]{"...o","..o."};
		p3 = 22;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new String[]{"5413","4323","8321","5490"};
		p1 = new String[]{"0432","7291","3901","2310"};
		p2 = new String[]{"ooo.","o..o","...o","oooo"};
		p3 = -12;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
