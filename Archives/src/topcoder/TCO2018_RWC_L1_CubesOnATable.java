package topcoder;
import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class TCO2018_RWC_L1_CubesOnATable
{
	public int[] placeCubes(int surface)
	{
		ArrayList<Integer> al = new ArrayList<>();
		int i = 0;
		while (surface > 12) {
			al.add(8);
			al.add(8);
			al.add(i);
			if (i == 0) 
				surface -= 5;
			else 
				surface -= 4;
			i++;
		}

		if (surface < 5) return new int[] {};		
		if (surface == 5) {
			al.add(0); al.add(0); al.add(0);} 
			//return new int[] {0,0,0};
		if (surface == 6 || surface == 7) return new int[] {};
		
		if (surface == 8) {
			al.add(0); al.add(0); al.add(0);
			al.add(0); al.add(1); al.add(0);}
			//return new int[] {0,0,0, 0,1,0};
		if (surface == 9) {
			al.add(0); al.add(0); al.add(0);
			al.add(0); al.add(0); al.add(1);}
			//return new int[] {0,0,0, 0,0,1};
		if (surface == 10)  {
			al.add(0); al.add(0); al.add(0);
			al.add(2); al.add(0); al.add(0);} 
			//return new int[] {0,0,0, 2,0,0};
		if (surface == 11) {
			al.add(0); al.add(0); al.add(0);
			al.add(0); al.add(1); al.add(0);
			al.add(1); al.add(0); al.add(0);} 
			//return new int[] {0,0,0, 0,1,0, 1,0,0};
		if (surface == 12) 
		{
			al.add(0); al.add(0); al.add(0);
			al.add(0); al.add(1); al.add(0);
			al.add(1); al.add(0); al.add(0);
			al.add(1); al.add(1); al.add(0);} 		
			//return new int[] {0,0,0, 0,1,0, 1,0,0, 1,1,0};
	
		int n = al.size();
		int[] ans = new int[n];
		for (i = 0; i < n; i++)
			ans[i] = al.get(i);
		return ans;
	}
	
	
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, boolean hasAnswer, int[] p1) {
		System.out.print("Test " + testNum + ": [" + p0);
		System.out.println("]");
		TCO2018_RWC_L1_CubesOnATable obj;
		int[] answer;
		obj = new TCO2018_RWC_L1_CubesOnATable();
		long startTime = System.currentTimeMillis();
		answer = obj.placeCubes(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p1.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print(p1[i]);
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(answer[i]);
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p1.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (answer[i] != p1[i]) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int[] p1;
		
		// ----- test 0 -----
		p0 = 5;
		p1 = new int[]{0,0,0};
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 20;
		p1 = new int[]{5,5,0,5,5,1,5,6,0,5,6,1,6,5,0,6,5,1,6,6,0,6,6,1};
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 25;
		p1 = new int[]{0,0,0,2,2,0,4,4,0,6,6,0,8,8,0};
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 32;
		p1 = new int[]{1,3,0,2,3,0,2,3,1,3,3,0,3,3,1,3,3,2,4,3,0,4,3,1,4,3,2,4,3,3};
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 500;
		p1 = new int[]{1,3,0,2,3,0,2,3,1,3,3,0,3,3,1,3,3,2,4,3,0,4,3,1,4,3,2,4,3,3};
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		// ----- test 3 -----
		p0 = 499;
		p1 = new int[]{1,3,0,2,3,0,2,3,1,3,3,0,3,3,1,3,3,2,4,3,0,4,3,1,4,3,2,4,3,3};
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		// ----- test 3 -----
		p0 = 498;
		p1 = new int[]{1,3,0,2,3,0,2,3,1,3,3,0,3,3,1,3,3,2,4,3,0,4,3,1,4,3,2,4,3,3};
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		// ----- test 3 -----
		p0 = 497;
		p1 = new int[]{1,3,0,2,3,0,2,3,1,3,3,0,3,3,1,3,3,2,4,3,0,4,3,1,4,3,2,4,3,3};
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ----- test 3 -----
		p0 = 496;
		p1 = new int[]{1,3,0,2,3,0,2,3,1,3,3,0,3,3,1,3,3,2,4,3,0,4,3,1,4,3,2,4,3,3};
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ----- test 3 -----
		p0 = 1;
		p1 = new int[]{};
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		
		// ------------------
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
