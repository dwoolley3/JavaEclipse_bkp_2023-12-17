package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM725_Div2_L1b_FiveRooksDiv2
{
	public int findMax(String[] b)
	{
		int n = 8;
		int[] col = new int[n];
		int[] row = new int[n];
		for (int i = 0; i < n; i++)
			for (int j = 0; j < n; j++)
				if (b[i].charAt(j) == 'R') {
					col[j]++;
					row[i]++;
				}
		
		int max = 0;
		for (int i = 0; i < n; i++) {
			max = Math.max(max, col[i]);
			max = Math.max(max, row[i]);
		}
		return max;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		SRM725_Div2_L1b_FiveRooksDiv2 obj;
		int answer;
		obj = new SRM725_Div2_L1b_FiveRooksDiv2();
		long startTime = System.currentTimeMillis();
		answer = obj.findMax(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		int p1;
		
		// ----- test 0 -----
		p0 = new String[]{"RRRRRRRR","RRRRRRRR","RRRRRRRR","RRRRRRRR","RRRRRRRR","RRRRRRRR","RRRRRRRR","RRRRRRRR"};
		p1 = 8;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"R......R",".R....R.","..R..R..","...RR...","...RR...","..R..R..",".R....R.","R......R"};
		p1 = 2;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{"R.R.R.RR","........","R.R.R.RR","........","........","........","R.R.R.RR","........"};
		p1 = 5;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{"R.R.R.RR","........","R.R.R.RR","R.R.R.RR","R.R.R.RR","R.R.R.RR","R.R.R.RR","........"};
		p1 = 6;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new String[]{"........","........","........","........","........","........","........","........"};
		p1 = 0;
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
