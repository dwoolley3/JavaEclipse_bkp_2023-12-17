package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM676_Div2_L1_FarmvilleDiv2
{
	public int minTime(int[] time, int[] cost, int budget)
	{
		int n = time.length;
		for (int i = 0; i < n-1; i++)
			for (int j = i+1; j < n; j++)
			{
				if (cost[i] > cost[j])
				{
					int t = cost[i]; cost[i] = cost[j]; cost[j] = t;
					t = time[i]; time[i] = time[j]; time[j] = t;
				}
			}
		
		int ans = 0;
		for (int i = 0; i < n; i++)
		{
			int x = budget / cost[i];
			int min = Math.min(time[i], x);
			ans += (time[i] - min);
			budget -= min * cost[i];
		}
		return ans;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, int p2, boolean hasAnswer, int p3) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}" + "," + p2);
		System.out.println("]");
		SRM676_Div2_L1_FarmvilleDiv2 obj;
		int answer;
		obj = new SRM676_Div2_L1_FarmvilleDiv2();
		long startTime = System.currentTimeMillis();
		answer = obj.minTime(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p3);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p3;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int[] p1;
		int p2;
		int p3;
		
		// ----- test 0 -----
		p0 = new int[]{100};
		p1 = new int[]{1};
		p2 = 26;
		p3 = 74;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{100};
		p1 = new int[]{1};
		p2 = 101;
		p3 = 0;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{2,1};
		p1 = new int[]{1,1};
		p2 = 3;
		p3 = 0;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{1,2,3,4,5};
		p1 = new int[]{5,4,3,2,1};
		p2 = 15;
		p3 = 6;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new int[]{100,100,100,100,100,100,100,100,100,100};
		p1 = new int[]{2,4,6,8,10,1,3,5,7,9};
		p2 = 5000;
		p3 = 50;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = new int[]{30,40,20,10};
		p1 = new int[]{10,20,30,40};
		p2 = 5;
		p3 = 100;
		all_right = KawigiEdit_RunTest(5, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
