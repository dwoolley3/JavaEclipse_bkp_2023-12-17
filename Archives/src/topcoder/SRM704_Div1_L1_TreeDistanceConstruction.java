package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM704_Div1_L1_TreeDistanceConstruction
{
	public int[] construct(int[] d)
	{
		int n = d.length;
		int[] c = new int[n+1];
		int max = 0, min = n+2;
		for (int x : d)
		{
			c[x]++;
			min = Math.min(min, x);
			max = Math.max(max, x);
		}
		int half = max/2;
		int bottom = (max % 2 == 0) ? half : half + 1;
		boolean good = true;
		if (bottom < min) good = false;
		for (int i = bottom + 1; i <= max; i++)
			if (c[d[i]] < 2) good = false;
		if (max % 2 == 0 && c[bottom] != 1) good = false;
		if (max % 2 == 1 && c[bottom] != 2) good = false;
		if (!good) return new int[0];

		int[] a = new int[2*(n-1)];
		int ai = 0;
		int ind = bottom;
		int cnt = 0;
		for (int i = 0, j = 0; i < n; i++)
		{
			if (d[i] == ind)
			{
				cnt++;
				if (cnt == 1)
				{
					for (; j < n; j++)
						if (d[j] == ind + 1)
						{
							a[ai++] = i;
							a[ai++] = j;
							break;
						}
					if (ind == bottom && max % 2 == 1)
					{
						j++;
						for (; j < n; j++)
							if (d[j] == ind + 1)
							{
								a[ai++] = i;
								a[ai++] = j;
							}
					}
				}
				else
				{
					j++;
					for (; j < n; j++)
						if (d[j] == ind + 1)
						{
							a[ai++] = i;
							a[ai++] = j;
						}
				}
			}
		}
		return a;		
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, boolean hasAnswer, int[] p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}");
		System.out.println("]");
		SRM704_Div1_L1_TreeDistanceConstruction obj;
		int[] answer;
		obj = new SRM704_Div1_L1_TreeDistanceConstruction();
		long startTime = System.currentTimeMillis();
		answer = obj.construct(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p1.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print(p1[i]);
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(answer[i]);
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p1.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (answer[i] != p1[i]) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int[] p1;
		
		// ----- test 0 -----
		p0 = new int[]{3,2,2,3};
		p1 = new int[]{1,2,1,0,2,3};
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{1,2,2,2};
		p1 = new int[]{0,1,0,2,0,3};
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{1,1,1,1};
		p1 = new int[]{};
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{1,1,1};
		p1 = new int[]{};
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new int[]{1,1};
		p1 = new int[]{0,1};
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{6,6,5,5,4,4,4,4,3,3};
		p1 = new int[]{};
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
