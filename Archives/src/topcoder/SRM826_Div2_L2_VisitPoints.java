package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM826_Div2_L2_VisitPoints
{
	public String visit(int[] X, int[] Y)
	{
        int n = X.length;
        int found = 0;
        StringBuilder sb = new StringBuilder(); 
        for (int i = 1; i <= 25; i++) {
        	sb.append("N");
        	for (int j = 1; j <= 26; j++) {
        		if (i%2==1) {
        			sb.append("E");
        			for (int k = 0; k < n; k++) {
        				if (i == Y[k] && j == X[k]) {
        					found++; break;
        				}
        			}        			
        		} else {
        			sb.append("W");
        			for (int k = 0; k < n; k++) {
        				if (i == Y[k] && 26 - j == X[k]) {
        					found++; break;
        				}
        			}        		
        		} 
        		if (found == n) return sb.toString();
        	}        	
        }
        return sb.toString(); // should not come here
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, boolean hasAnswer, String p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		SRM826_Div2_L2_VisitPoints obj;
		String answer;
		obj = new SRM826_Div2_L2_VisitPoints();
		long startTime = System.currentTimeMillis();
		answer = obj.visit(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p2 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p2);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int[] p1;
		String p2;
		
		// ----- test 0 -----
		p0 = new int[]{1,2,3};
		p1 = new int[]{1,3,5};
		p2 = "NENNNNEEWSS";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{1,7,3,9,5};
		p1 = new int[]{1,1,1,1,1};
		p2 = "NEEEEEEEEE";
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{4,11,13,18,12};
		p1 = new int[]{21,4,17,9,19};
		p2 = "NNNNNNNNNNNNNNNNNNENENENESSSSSSSSSSSESESESESESESENNNNNNNNNNNNENESSSSESESESESENNNNNWNWNWNWNWNW";
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = new int[]{1,2,3};
		p1 = new int[]{1,3,4};
		p2 = "NENNNNEEWSS";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = new int[]{25};
		p1 = new int[]{2};
		p2 = "NENNNNEEWSS";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = new int[]{1};
		p1 = new int[]{1};
		p2 = "NENNNNEEWSS";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = new int[]{2};
		p1 = new int[]{1};
		p2 = "NENNNNEEWSS";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = new int[]{1};
		p1 = new int[]{2};
		p2 = "NENNNNEEWSS";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = new int[]{1};
		p1 = new int[]{3};
		p2 = "NENNNNEEWSS";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = new int[]{25};
		p1 = new int[]{1};
		p2 = "NENNNNEEWSS";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = new int[]{25};
		p1 = new int[]{2};
		p2 = "NENNNNEEWSS";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = new int[]{1,24};
		p1 = new int[]{1,2};
		p2 = "NENNNNEEWSS";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = new int[]{1,25};
		p1 = new int[]{1,25};
		p2 = "NENNNNEEWSS";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 0 -----
		p0 = new int[]{1,2,24,25,25,24,2,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,1,2};
		p1 = new int[]{1,1,1,1,2,2,2,2,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,24,24};
		p2 = "NENNNNEEWSS";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
