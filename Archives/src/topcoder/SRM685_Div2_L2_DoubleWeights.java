package topcoder;
//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM685_Div2_L2_DoubleWeights
{
	int min = Integer.MAX_VALUE;
	boolean[] used;
	
	public int minimalCost(String[] weight1, String[] weight2)
	{
		used = new boolean[weight1.length];
		dfs(0,0,0,weight1, weight2);
		if (min == Integer.MAX_VALUE) return -1;
		return min;
	}
	
	private void dfs(int w1, int w2, int node,
		String[] weight1, String[] weight2)
	{
		if (node == 1) {
			min = Math.min(min,  w1*w2);
			return;
		}
		if (w1*w2 > min) return;
		
		for (int i = 0; i < weight1[node].length(); i++) {
			if (weight1[node].charAt(i) != '.' && !used[i]) {
				used[i] = true;
				int w1Val = weight1[node].charAt(i) - '0';
				int w2Val = weight2[node].charAt(i) - '0';
				w1 += w1Val;
				w2 += w2Val;
				dfs(w1, w2, i, weight1, weight2);
				w1 -= w1Val;
				w2 -= w2Val;
				used[i] = false;
			}
		}			
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, String[] p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p1[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		SRM685_Div2_L2_DoubleWeights obj;
		int answer;
		obj = new SRM685_Div2_L2_DoubleWeights();
		long startTime = System.currentTimeMillis();
		answer = obj.minimalCost(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		String[] p1;
		int p2;
		
		// ----- test 0 -----
		p0 = new String[]{"..14","..94","19..","44.."};
		p1 = new String[]{"..94","..14","91..","44.."};
		p2 = 64;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"..14","..14","11..","44.."};
		p1 = new String[]{"..94","..94","99..","44.."};
		p2 = 36;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{"..",".."};
		p1 = new String[]{"..",".."};
		p2 = -1;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{".....9","..9...",".9.9..","..9.9.","...9.9","9...9."};
		p1 = new String[]{".....9","..9...",".9.9..","..9.9.","...9.9","9...9."};
		p2 = 2025;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new String[]{".4...1","4.1...",".1.1..","..1.1.","...1.1","1...1."};
		p1 = new String[]{".4...1","4.1...",".1.1..","..1.1.","...1.1","1...1."};
		p2 = 16;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
